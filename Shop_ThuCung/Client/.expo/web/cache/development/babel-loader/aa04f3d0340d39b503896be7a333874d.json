{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nexport var CREATE_CATEGORY = \"CREATE_CATEGORY\";\nexport var UPDATE_CATEGORY = \"UPDATE_CATEGORY\";\nexport var DELETE_CATEGORY = \"DELETE_CATEGORY\";\nexport var GETALL_CATEGORY = \"GETALL_CATEGORY\";\nexport var SEARCH_CATEGORY = \"SEARCH_CATEGORY\";\nexport var getAllCategory = function getAllCategory(category) {\n  return {\n    type: \"GETALL_CATEGORY\",\n    payload: category\n  };\n};\nexport var fetchAllCategory = function fetchAllCategory() {\n  return function (dispatch) {\n    var getData = function () {\n      var _ref = _asyncToGenerator(function* () {\n        try {\n          var response = yield fetch(\"http://localhost:5000/Cate\");\n          var category = yield response.json();\n          console.log(\"here\", category);\n          dispatch(getAllCategory(category));\n        } catch (err) {\n          console.error(err);\n        }\n      });\n\n      return function getData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getData();\n  };\n};\nexport var SearchCategory = function SearchCategory(category) {\n  return {\n    type: SEARCH_CATEGORY,\n    payload: category\n  };\n};\nexport var SearchCate = function SearchCate(key) {\n  return function (dispatch) {\n    var getData = function () {\n      var _ref2 = _asyncToGenerator(function* () {\n        try {\n          var response = yield fetch(\"http://localhost:5000/searchCate/\" + key);\n          var category = yield response.json();\n          dispatch(SearchCategory(category));\n        } catch (err) {\n          console.error(err);\n        }\n      });\n\n      return function getData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    getData();\n  };\n};\nexport var createCategory = function createCategory(category) {\n  return {\n    type: \"CREATE_CATEGORY\",\n    payload: category\n  };\n};\nexport var postCate = function postCate(category) {\n  return function (dispatch) {\n    var addData = function () {\n      var _ref3 = _asyncToGenerator(function* () {\n        try {\n          yield fetch(\"http://localhost:5000/addCate\", {\n            method: \"POST\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(category)\n          });\n        } catch (err) {\n          console.error(err);\n        }\n      });\n\n      return function addData() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    addData();\n    dispatch(createCategory(category));\n  };\n};\nexport var updateCategory = function updateCategory(docId, category) {\n  return {\n    type: \"UPDATE_CATEGORY\",\n    payload: {\n      docId: docId,\n      category: category\n    }\n  };\n};\nexport var updateCate = function updateCate(docId, category) {\n  console.log(\"docId\", docId);\n  console.log(\"category\", category);\n  return function (dispatch) {\n    var updateData = function () {\n      var _ref4 = _asyncToGenerator(function* () {\n        try {\n          yield fetch(\"http://localhost:5000/updateCate/\" + docId, {\n            method: \"PUT\",\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(category)\n          });\n        } catch (err) {\n          console.error(err);\n        }\n      });\n\n      return function updateData() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    updateData();\n    dispatch(updateCategory(docId, category));\n    dispatch(fetchAllCategory());\n  };\n};\nexport var deleteCategory = function deleteCategory(docId) {\n  return {\n    type: \"DELETE_CATEGORY\",\n    payload: {\n      docId: docId\n    }\n  };\n};\nexport var deleteCate = function deleteCate(docId) {\n  return function (dispatch) {\n    var deleteData = function () {\n      var _ref5 = _asyncToGenerator(function* () {\n        try {\n          yield fetch(\"http://localhost:5000/deleteCate/\" + docId, {\n            method: \"DELETE\"\n          });\n        } catch (err) {\n          console.error(err);\n        }\n      });\n\n      return function deleteData() {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n\n    deleteData();\n    dispatch(deleteCategory(docId));\n    dispatch(fetchAllCategory());\n  };\n};","map":{"version":3,"names":["CREATE_CATEGORY","UPDATE_CATEGORY","DELETE_CATEGORY","GETALL_CATEGORY","SEARCH_CATEGORY","getAllCategory","category","type","payload","fetchAllCategory","dispatch","getData","response","fetch","json","console","log","err","error","SearchCategory","SearchCate","key","createCategory","postCate","addData","method","headers","Accept","body","JSON","stringify","updateCategory","docId","updateCate","updateData","deleteCategory","deleteCate","deleteData"],"sources":["D:/PhatTrienUngDungMobile/Project/assigment3/Shop_Pet/Shop_Pet/Shops_Pet/redux/actions/categoryActions.js"],"sourcesContent":["export const CREATE_CATEGORY = \"CREATE_CATEGORY\";\r\nexport const UPDATE_CATEGORY = \"UPDATE_CATEGORY\";\r\nexport const DELETE_CATEGORY = \"DELETE_CATEGORY\";\r\nexport const GETALL_CATEGORY = \"GETALL_CATEGORY\";\r\nexport const SEARCH_CATEGORY = \"SEARCH_CATEGORY\";\r\n//Category\r\n//get all\r\nexport const getAllCategory = (category) => {\r\n  return {\r\n    type: \"GETALL_CATEGORY\",\r\n    payload: category,\r\n  };\r\n};\r\n\r\nexport const fetchAllCategory = () => {\r\n  return (dispatch) => {\r\n    const getData = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/Cate\");\r\n        const category = await response.json();\r\n        console.log(\"here\", category);\r\n        //dispatch action to reducer\r\n        dispatch(getAllCategory(category));\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n    getData();\r\n  };\r\n};\r\n\r\n//search\r\nexport const SearchCategory = (category) => {\r\n  return {\r\n    type: SEARCH_CATEGORY,\r\n    payload: category,\r\n  };\r\n};\r\n\r\nexport const SearchCate = (key) => {\r\n  return (dispatch) => {\r\n    const getData = async () => {\r\n      try {\r\n        const response = await fetch(\"http://localhost:5000/searchCate/\" + key);\r\n        const category = await response.json();\r\n        // console.log(books)\r\n        dispatch(SearchCategory(category));\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n    getData();\r\n  };\r\n};\r\n\r\n//create\r\nexport const createCategory = (category) => {\r\n  return {\r\n    type: \"CREATE_CATEGORY\",\r\n    payload: category,\r\n  };\r\n};\r\n\r\nexport const postCate = (category) => {\r\n  return (dispatch) => {\r\n    const addData = async () => {\r\n      try {\r\n        await fetch(\"http://localhost:5000/addCate\", {\r\n          method: \"POST\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(category),\r\n        });\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n    addData();\r\n    dispatch(createCategory(category));\r\n  };\r\n};\r\n\r\n//update\r\nexport const updateCategory = (docId, category) => {\r\n  return {\r\n    type: \"UPDATE_CATEGORY\",\r\n    payload: { docId: docId, category },\r\n  };\r\n};\r\n\r\nexport const updateCate = (docId, category) => {\r\n  console.log(\"docId\", docId);\r\n  console.log(\"category\", category);\r\n  return (dispatch) => {\r\n    const updateData = async () => {\r\n      try {\r\n        await fetch(`http://localhost:5000/updateCate/${docId}`, {\r\n          method: \"PUT\",\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify(category),\r\n        });\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n    updateData();\r\n    dispatch(updateCategory(docId, category));\r\n    dispatch(fetchAllCategory());\r\n  };\r\n};\r\n\r\n//delete\r\nexport const deleteCategory = (docId) => {\r\n  return {\r\n    type: \"DELETE_CATEGORY\",\r\n    payload: { docId },\r\n  };\r\n};\r\n\r\nexport const deleteCate = (docId) => {\r\n  return (dispatch) => {\r\n    const deleteData = async () => {\r\n      try {\r\n        await fetch(`http://localhost:5000/deleteCate/${docId}`, {\r\n          method: \"DELETE\",\r\n        });\r\n      } catch (err) {\r\n        console.error(err);\r\n      }\r\n    };\r\n    deleteData();\r\n    dispatch(deleteCategory(docId));\r\n    dispatch(fetchAllCategory());\r\n  };\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}