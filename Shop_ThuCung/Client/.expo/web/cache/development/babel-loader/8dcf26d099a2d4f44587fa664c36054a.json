{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport React, { useImperativeHandle, useMemo, useRef } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dropdown from \"../Dropdown\";\nimport { styles } from \"./styles\";\nvar SelectCountryConponent = React.forwardRef(function (props, currentRef) {\n  var testID = props.testID,\n      itemTestIDField = props.itemTestIDField,\n      data = props.data,\n      value = props.value,\n      valueField = props.valueField,\n      labelField = props.labelField,\n      imageField = props.imageField,\n      selectedTextStyle = props.selectedTextStyle,\n      imageStyle = props.imageStyle;\n  var ref = useRef(null);\n  useImperativeHandle(currentRef, function () {\n    return {\n      open: eventOpen,\n      close: eventClose\n    };\n  });\n\n  var eventOpen = function eventOpen() {\n    ref.current.open();\n  };\n\n  var eventClose = function eventClose() {\n    ref.current.close();\n  };\n\n  var _renderItem = function _renderItem(item) {\n    return React.createElement(View, {\n      style: styles.item\n    }, React.createElement(Image, {\n      source: item[imageField],\n      style: [styles.image, imageStyle]\n    }), React.createElement(Text, {\n      style: [styles.selectedTextStyle, selectedTextStyle]\n    }, item[labelField]));\n  };\n\n  var selectItem = useMemo(function () {\n    var index = data.findIndex(function (e) {\n      return e[valueField] === value;\n    });\n    return data[index];\n  }, [data, valueField, value]);\n  return React.createElement(Dropdown, _extends({\n    testID: testID,\n    itemTestIDField: itemTestIDField,\n    ref: ref\n  }, props, {\n    renderItem: _renderItem,\n    renderLeftIcon: function renderLeftIcon() {\n      if (selectItem !== null && selectItem !== void 0 && selectItem.image) {\n        return React.createElement(Image, {\n          source: selectItem.image,\n          style: [styles.image, imageStyle]\n        });\n      } else {\n        return null;\n      }\n    }\n  }));\n});\nexport default SelectCountryConponent;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,mBAAhB,EAAqCC,OAArC,EAA8CC,MAA9C,QAA4D,OAA5D;;;;AAEA,OAAOC,QAAP;AAEA,SAASC,MAAT;AAEA,IAAMC,sBAAsB,GAAGN,KAAK,CAACO,UAANP,CAC7B,UAACQ,KAAD,EAAQC,UAAR,EAAuB;EACrB,IACEC,MADF,GAUIF,KAVJ,CACEE,MADF;EAAA,IAEEC,eAFF,GAUIH,KAVJ,CAEEG,eAFF;EAAA,IAGEC,IAHF,GAUIJ,KAVJ,CAGEI,IAHF;EAAA,IAIEC,KAJF,GAUIL,KAVJ,CAIEK,KAJF;EAAA,IAKEC,UALF,GAUIN,KAVJ,CAKEM,UALF;EAAA,IAMEC,UANF,GAUIP,KAVJ,CAMEO,UANF;EAAA,IAOEC,UAPF,GAUIR,KAVJ,CAOEQ,UAPF;EAAA,IAQEC,iBARF,GAUIT,KAVJ,CAQES,iBARF;EAAA,IASEC,UATF,GAUIV,KAVJ,CASEU,UATF;EAWA,IAAMC,GAAQ,GAAGhB,MAAM,CAAC,IAAD,CAAvB;EAEAF,mBAAmB,CAACQ,UAAD,EAAa,YAAM;IACpC,OAAO;MAAEW,IAAI,EAAEC,SAAR;MAAmBC,KAAK,EAAEC;IAA1B,CAAP;EADiB,EAAnBtB;;EAIA,IAAMoB,SAAS,GAAG,SAAZA,SAAY,GAAM;IACtBF,GAAG,CAACK,OAAJL,CAAYC,IAAZD;EADF;;EAIA,IAAMI,UAAU,GAAG,SAAbA,UAAa,GAAM;IACvBJ,GAAG,CAACK,OAAJL,CAAYG,KAAZH;EADF;;EAIA,IAAMM,WAAW,GAAIC,SAAfD,WAAeC,KAAD,EAAe;IACjC,OACE1B,oBAAC2B,IAAD;MAAMC,KAAK,EAAEvB,MAAM,CAACqB;IAApB,GACE1B,oBAAC6B,KAAD;MAAOC,MAAM,EAAEJ,IAAI,CAACV,UAAD,CAAnB;MAAiCY,KAAK,EAAE,CAACvB,MAAM,CAAC0B,KAAR,EAAeb,UAAf;IAAxC,EADF,EAEElB,oBAACgC,IAAD;MAAMJ,KAAK,EAAE,CAACvB,MAAM,CAACY,iBAAR,EAA2BA,iBAA3B;IAAb,GACGS,IAAI,CAACX,UAAD,CADP,CAFF,CADF;EADF;;EAWA,IAAMkB,UAAU,GAAG/B,OAAO,CAAC,YAAM;IAC/B,IAAMgC,KAAK,GAAGtB,IAAI,CAACuB,SAALvB,CAAgBwB,WAAD;MAAA,OAAOA,CAAC,CAACtB,UAAD,CAADsB,KAAkBvB,KAAzB;IAAA,CAAfD,CAAd;IACA,OAAOA,IAAI,CAACsB,KAAD,CAAX;EAFwB,GAGvB,CAACtB,IAAD,EAAOE,UAAP,EAAmBD,KAAnB,CAHuB,CAA1B;EAKA,OACEb,oBAACI,QAAD;IACEM,MAAM,EAAEA,MADV;IAEEC,eAAe,EAAEA,eAFnB;IAGEQ,GAAG,EAAEA;EAHP,GAIMX,KAJN;IAKE6B,UAAU,EAAEZ,WALd;IAMEa,cAAc,EAAE,0BAAM;MACpB,IAAIL,UAAJ,SAAIA,cAAJ,WAAIA,cAAU,CAAEF,KAAhB,EAAuB;QACrB,OACE/B,oBAAC6B,KAAD;UACEC,MAAM,EAAEG,UAAU,CAACF,KADrB;UAEEH,KAAK,EAAE,CAACvB,MAAM,CAAC0B,KAAR,EAAeb,UAAf;QAFT,EADF;MADF,OAOO;QACL,OAAO,IAAP;MACD;IACF;EAjBH,GADF;AA3C2B,EAA/B;AAmEA,eAAeZ,sBAAf","names":["React","useImperativeHandle","useMemo","useRef","Dropdown","styles","SelectCountryConponent","forwardRef","props","currentRef","testID","itemTestIDField","data","value","valueField","labelField","imageField","selectedTextStyle","imageStyle","ref","open","eventOpen","close","eventClose","current","_renderItem","item","View","style","Image","source","image","Text","selectItem","index","findIndex","e","renderItem","renderLeftIcon"],"sources":["index.tsx"],"sourcesContent":["import React, { useImperativeHandle, useMemo, useRef } from 'react';\nimport { Image, View, Text } from 'react-native';\nimport Dropdown from '../Dropdown';\nimport type { SelectCountryProps } from './model';\nimport { styles } from './styles';\n\nconst SelectCountryConponent = React.forwardRef<any, SelectCountryProps>(\n  (props, currentRef) => {\n    const {\n      testID,\n      itemTestIDField,\n      data,\n      value,\n      valueField,\n      labelField,\n      imageField,\n      selectedTextStyle,\n      imageStyle,\n    } = props;\n    const ref: any = useRef(null);\n\n    useImperativeHandle(currentRef, () => {\n      return { open: eventOpen, close: eventClose };\n    });\n\n    const eventOpen = () => {\n      ref.current.open();\n    };\n\n    const eventClose = () => {\n      ref.current.close();\n    };\n\n    const _renderItem = (item: any) => {\n      return (\n        <View style={styles.item}>\n          <Image source={item[imageField]} style={[styles.image, imageStyle]} />\n          <Text style={[styles.selectedTextStyle, selectedTextStyle]}>\n            {item[labelField]}\n          </Text>\n        </View>\n      );\n    };\n\n    const selectItem = useMemo(() => {\n      const index = data.findIndex((e) => e[valueField] === value);\n      return data[index];\n    }, [data, valueField, value]);\n\n    return (\n      <Dropdown\n        testID={testID}\n        itemTestIDField={itemTestIDField}\n        ref={ref}\n        {...props}\n        renderItem={_renderItem}\n        renderLeftIcon={() => {\n          if (selectItem?.image) {\n            return (\n              <Image\n                source={selectItem.image}\n                style={[styles.image, imageStyle]}\n              />\n            );\n          } else {\n            return null;\n          }\n        }}\n      />\n    );\n  }\n);\n\nexport default SelectCountryConponent;\n"]},"metadata":{},"sourceType":"module"}