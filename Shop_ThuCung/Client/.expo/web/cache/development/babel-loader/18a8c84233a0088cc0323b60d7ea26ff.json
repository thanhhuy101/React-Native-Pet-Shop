{"ast":null,"code":"","map":{"version":3,"names":[],"sources":["D:/PhatTrienUngDungMobile/Project/Final/Shops_Pet/Shops_Pet/views-users/Item.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import {\r\n//   Platform,\r\n//   StyleSheet,\r\n//   Text,\r\n//   View,\r\n//   TextInput,\r\n//   TouchableOpacity,\r\n//   ImageBackground,\r\n//   Image\r\n// } from \"react-native\";\r\n// //import Ionicons from \"react-native-vector-icons/Ionicons\";\r\n// import { Ionicons, FontAwesome5 } from \"@expo/vector-icons\";\r\n// import {\r\n//   getStorage,\r\n//   uploadString,\r\n//   ref,\r\n//   getDownloadURL,\r\n//   uploadBytesResumable\r\n// } from \"firebase/storage\";\r\n\r\n// import * as ImagePicker from \"expo-image-picker\";\r\n// import { useDispatch, useSelector } from \"react-redux\";\r\n// import { fetchAllItem } from \"../redux/actions/itemActions\";\r\n// import { ScrollView } from \"react-native-virtualized-view\";\r\n\r\n// const Item = ({ navigation, route }) => {\r\n//   const { productId } = route.params;\r\n//   const { productName } = route.params;\r\n//   const { productCId } = route.params;\r\n//   const { productImage } = route.params;\r\n//   const { productPrice } = route.params;\r\n//   const { productQuantity } = route.params;\r\n\r\n//   const [docId, setdocId] = useState(productId);\r\n//   const [id, setCId] = useState(productCId);\r\n//   const [name, setName] = useState(productName);\r\n//   const [quantity, setQuantity] = useState(productQuantity);\r\n//   const [price, setPrice] = useState(productPrice);\r\n\r\n//   const dispatch = useDispatch();\r\n//   const db = useSelector(store => store.items);\r\n\r\n//   useEffect(() => {\r\n//     dispatch(fetchAllItem());\r\n//     console.log(\"db\", db);\r\n//   }, []);\r\n\r\n//   const [selectedImage, setSelectedImage] = useState({\r\n//     localURI: productImage\r\n//   });\r\n//   const convertURI2BlobFile = async uri => {\r\n//     const result = await new Promise((resolve, reject) => {\r\n//       let xmlRequest = new XMLHttpRequest();\r\n//       xmlRequest.onload = function() {\r\n//         resolve(xmlRequest.response);\r\n//       };\r\n//       xmlRequest.onerror = function() {\r\n//         reject(new TypeError(\"Request failed\"));\r\n//       };\r\n//       xmlRequest.responseType = \"blob\";\r\n//       xmlRequest.open(\"GET\", uri, true);\r\n//       xmlRequest.send(null);\r\n//     });\r\n//     return result;\r\n//   };\r\n//   const uploadFile = async blobFile => {\r\n//     let imgname = \"img-android\" + new Date().getTime();\r\n//     //step2\r\n//     let storage = getStorage();\r\n//     let storageRef = ref(storage, `images/${imgname}.jpg`);\r\n//     let metadata = { contentType: \"image/jpeg\" };\r\n\r\n//     const uploadTask = uploadBytesResumable(storageRef, blobFile, metadata);\r\n//     uploadTask.on(\r\n//       \"state_changed\",\r\n//       snapshot => {},\r\n//       error => {},\r\n//       () => {\r\n//         getDownloadURL(uploadTask.snapshot.ref).then(downloadURL => {\r\n//           console.log(\"downloadURL\", downloadURL);\r\n//           setSelectedImage({ localURI: downloadURL });\r\n//         });\r\n//       }\r\n//     );\r\n//   };\r\n//   const uploadBase64 = async base64code => {\r\n//     let imgname = \"img-w-\" + new Date().getTime();\r\n//     //step2\r\n//     let storage = getStorage();\r\n//     let storageRef = ref(storage, `images/${imgname}.jpg`);\r\n//     let metadata = { contentType: \"image/jpeg\" };\r\n//     uploadString(storageRef, base64code, \"base64\", metadata).then(snapshot => {\r\n//       getDownloadURL(snapshot.ref).then(downloadURL => {\r\n//         console.log(\"downloadURL\", downloadURL);\r\n//         setSelectedImage({ localURI: downloadURL });\r\n//       });\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <View>\r\n//       <ImageBackground\r\n//         style={styles.bgContainer}\r\n//         source={require(\"../assets/BK.jpg\")}\r\n//         resizeMode=\"cover\"\r\n//       >\r\n//         <Image source={{ uri: selectedImage.localURI }} style={styles.img} />\r\n//         <View>\r\n//           {/* <Ionicons name=\"create\" color=\"#FFF\" size={36} /> */}\r\n//           <ion-icon name=\"heart-circle-outline\" color=\"#FFF\" size={36} />\r\n//         </View>\r\n//         <Text style={styles.signinText}>Thông tin</Text>\r\n//         <ScrollView\r\n//           showsVerticalScrollIndicator={false}\r\n//           style={styles.formContainer}\r\n//         >\r\n//           <Text style={styles.signinText1}>Tên sản phẩm</Text>\r\n//           <View style={styles.inputContainer}>\r\n//             <TextInput value={name} style={styles.inputText} />\r\n//           </View>\r\n//           <Text style={styles.signinText1}>Giá</Text>\r\n//           <View style={styles.inputContainer}>\r\n//             <TextInput value={price} style={styles.inputText} />\r\n//           </View>\r\n//           <Text style={styles.signinText1}>Số lượng</Text>\r\n//           <View style={styles.inputContainer}>\r\n//             <TextInput value={quantity} style={styles.inputText} />\r\n//           </View>\r\n//           <TouchableOpacity style={styles.btn}>\r\n//             <Text style={styles.btnTxt}>Thêm vào giỏ hàng</Text>\r\n//           </TouchableOpacity>\r\n//           <TouchableOpacity style={styles.btn}>\r\n//             <Text style={styles.btnTxt}>Yêu thích</Text>\r\n//           </TouchableOpacity>\r\n//         </ScrollView>\r\n//       </ImageBackground>\r\n//     </View>\r\n//   );\r\n// };\r\n// export default Item;\r\n// const styles = StyleSheet.create({\r\n//   logoLogin: {\r\n//     width: 60,\r\n//     height: 60,\r\n//     borderRadius: 60 / 2,\r\n//     // backgroundColor: \"#d81b60\",\r\n//     alignItems: \"center\",\r\n//     justifyContent: \"center\",\r\n//     marginTop: 10\r\n//   },\r\n//   signinText: {\r\n//     fontSize: 30,\r\n//     fontWeight: \"bold\",\r\n//     textTransform: \"uppercase\",\r\n//     marginTop: 10,\r\n//     color: \"#d81b60\"\r\n//   },\r\n//   signinText1: {\r\n//     fontSize: 20,\r\n//     fontWeight: \"bold\",\r\n//     textTransform: \"uppercase\",\r\n//     marginTop: 10,\r\n//     color: \"#9575cd\"\r\n//   },\r\n//   img: {\r\n//     width: 150,\r\n//     height: 150,\r\n//     borderRadius: 75\r\n//   },\r\n//   title: {\r\n//     color: \"#d81b60\",\r\n//     fontSize: 30,\r\n//     fontWeight: \"bold\",\r\n//     textTransform: \"uppercase\",\r\n//     marginTop: 10\r\n//   },\r\n//   formContainer: {\r\n//     width: \"80%\",\r\n//     marginLeft: 88,\r\n//     // alignItems: \"center\",\r\n//     // justifyContent: \"center\",\r\n//     paddingTop: 10\r\n//   },\r\n//   inputContainer: {\r\n//     width: \"70%\",\r\n//     marginBottom: 10\r\n//   },\r\n//   inputText: {\r\n//     borderBottomWidth: 2,\r\n//     borderBottomColor: \"#d81b60\",\r\n//     paddingVertical: 10,\r\n//     color: \"#212121\",\r\n//     fontSize: 30,\r\n//     fontWeight: \"bold\"\r\n//   },\r\n//   btn: {\r\n//     backgroundColor: \"#d81b60\",\r\n//     width: \"70%\",\r\n//     height: 45,\r\n//     alignItems: \"center\",\r\n//     justifyContent: \"center\",\r\n//     borderRadius: 10,\r\n//     marginTop: 20,\r\n  \r\n//   },\r\n//   btnTxt: {\r\n//     color: \"#e0f7fa\",\r\n//     fontWeight: \"bold\",\r\n//     fontSize: 20,\r\n//   },\r\n//   bgContainer: {\r\n//     flex: 1,\r\n//     alignItems: \"center\"\r\n//   }\r\n// });\r\n"],"mappings":""},"metadata":{},"sourceType":"script"}