{"ast":null,"code":"import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/storage';\nexport var USER_STATE_CHANGE = 'USER_STATE_CHANGE';\nexport var userAuthStateListener = function userAuthStateListener() {\n  return function (dispatch) {\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        dispatch(getCurrentUserData());\n      } else {\n        dispatch({\n          type: USER_STATE_CHANGE,\n          currentUser: null,\n          loaded: true\n        });\n      }\n    });\n  };\n};\nexport var getUserById = function getUserById(id) {\n  return new Promise(function (resolve, reject) {\n    firebase.firestore().collection('users').doc(id).get().then(function (snapshot) {\n      resolve(snapshot.exists ? snapshot.data() : null);\n    }).catch(function () {\n      return reject();\n    });\n  });\n};\nexport var getCurrentUserData = function getCurrentUserData() {\n  return function (dispatch) {\n    firebase.firestore().collection('users').doc(firebase.auth().currentUser.uid).onSnapshot(function (res) {\n      if (res.exists) {\n        return dispatch({\n          type: USER_STATE_CHANGE,\n          currentUser: res.data(),\n          loaded: true\n        });\n      }\n    });\n  };\n};\nexport var saveUserField = function saveUserField(name, imageURL, email, phone, birthday, address) {\n  return new Promise(function (resolve, reject) {\n    var obj = {\n      imageURL: imageURL,\n      name: name,\n      email: email,\n      phone: phone,\n      birthday: birthday,\n      address: address\n    };\n    console.log('test', name, imageURL, email, phone, birthday, address);\n    firebase.firestore().collection('users').doc(firebase.auth().currentUser.uid).update(obj).then(function () {\n      return resolve();\n    }).catch(function () {\n      return reject();\n    });\n  });\n};","map":{"version":3,"names":["firebase","USER_STATE_CHANGE","userAuthStateListener","dispatch","auth","onAuthStateChanged","user","getCurrentUserData","type","currentUser","loaded","getUserById","id","Promise","resolve","reject","firestore","collection","doc","get","then","snapshot","exists","data","catch","uid","onSnapshot","res","saveUserField","name","imageURL","email","phone","birthday","address","obj","console","log","update"],"sources":["C:/Users/ASUS/OneDrive/Máy tính/New folder/liu/Shop_ThuCung/Client/redux/actions/authAction.js"],"sourcesContent":["import firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/storage';\n\nexport const USER_STATE_CHANGE = 'USER_STATE_CHANGE'\n\nexport const userAuthStateListener = () => dispatch => {\n    firebase.auth().onAuthStateChanged((user) => {\n        if (user) {\n            dispatch(getCurrentUserData())\n        } else {\n            dispatch({ type: USER_STATE_CHANGE, currentUser: null, loaded: true })\n        }\n    })\n}\n\nexport const getUserById = (id) => new Promise((resolve, reject) => {\n    firebase.firestore()\n        .collection('users')\n        .doc(id)\n        .get()\n        .then((snapshot) => {\n            resolve(snapshot.exists ? snapshot.data() : null)\n        })\n        .catch(() => reject())\n})\n\nexport const getCurrentUserData = () => dispatch => {\n    firebase.firestore()\n        .collection('users')\n        .doc(firebase.auth().currentUser.uid)\n        .onSnapshot((res) => {\n            if (res.exists) {\n                return dispatch({\n                    type: USER_STATE_CHANGE,\n                    currentUser: res.data(),\n                    loaded: true\n                })\n            }\n        })\n}\n\nexport const saveUserField = (name, imageURL, email, phone, birthday, address) => new Promise((resolve, reject) => {\n    let obj = {\n        imageURL,\n        name,\n        email,\n        phone,\n        birthday,\n        address\n    };\n    console.log('test', name, imageURL, email, phone, birthday, address)\n    // obj[field] = value\n    firebase.firestore()\n        .collection('users')\n        .doc(firebase.auth().currentUser.uid)\n        .update(obj)\n        .then(() => resolve())\n        .catch(() => reject())\n})"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,qBAArB;AACA,OAAO,sBAAP;AACA,OAAO,2BAAP;AACA,OAAO,yBAAP;AAEA,OAAO,IAAMC,iBAAiB,GAAG,mBAA1B;AAEP,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB;EAAA,OAAM,UAAAC,QAAQ,EAAI;IACnDH,QAAQ,CAACI,IAAT,GAAgBC,kBAAhB,CAAmC,UAACC,IAAD,EAAU;MACzC,IAAIA,IAAJ,EAAU;QACNH,QAAQ,CAACI,kBAAkB,EAAnB,CAAR;MACH,CAFD,MAEO;QACHJ,QAAQ,CAAC;UAAEK,IAAI,EAAEP,iBAAR;UAA2BQ,WAAW,EAAE,IAAxC;UAA8CC,MAAM,EAAE;QAAtD,CAAD,CAAR;MACH;IACJ,CAND;EAOH,CARoC;AAAA,CAA9B;AAUP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,EAAD;EAAA,OAAQ,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;IAChEf,QAAQ,CAACgB,SAAT,GACKC,UADL,CACgB,OADhB,EAEKC,GAFL,CAESN,EAFT,EAGKO,GAHL,GAIKC,IAJL,CAIU,UAACC,QAAD,EAAc;MAChBP,OAAO,CAACO,QAAQ,CAACC,MAAT,GAAkBD,QAAQ,CAACE,IAAT,EAAlB,GAAoC,IAArC,CAAP;IACH,CANL,EAOKC,KAPL,CAOW;MAAA,OAAMT,MAAM,EAAZ;IAAA,CAPX;EAQH,CATkC,CAAR;AAAA,CAApB;AAWP,OAAO,IAAMR,kBAAkB,GAAG,SAArBA,kBAAqB;EAAA,OAAM,UAAAJ,QAAQ,EAAI;IAChDH,QAAQ,CAACgB,SAAT,GACKC,UADL,CACgB,OADhB,EAEKC,GAFL,CAESlB,QAAQ,CAACI,IAAT,GAAgBK,WAAhB,CAA4BgB,GAFrC,EAGKC,UAHL,CAGgB,UAACC,GAAD,EAAS;MACjB,IAAIA,GAAG,CAACL,MAAR,EAAgB;QACZ,OAAOnB,QAAQ,CAAC;UACZK,IAAI,EAAEP,iBADM;UAEZQ,WAAW,EAAEkB,GAAG,CAACJ,IAAJ,EAFD;UAGZb,MAAM,EAAE;QAHI,CAAD,CAAf;MAKH;IACJ,CAXL;EAYH,CAbiC;AAAA,CAA3B;AAeP,OAAO,IAAMkB,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAOC,QAAP,EAAiBC,KAAjB,EAAwBC,KAAxB,EAA+BC,QAA/B,EAAyCC,OAAzC;EAAA,OAAqD,IAAIrB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;IAC/G,IAAIoB,GAAG,GAAG;MACNL,QAAQ,EAARA,QADM;MAEND,IAAI,EAAJA,IAFM;MAGNE,KAAK,EAALA,KAHM;MAINC,KAAK,EAALA,KAJM;MAKNC,QAAQ,EAARA,QALM;MAMNC,OAAO,EAAPA;IANM,CAAV;IAQAE,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBR,IAApB,EAA0BC,QAA1B,EAAoCC,KAApC,EAA2CC,KAA3C,EAAkDC,QAAlD,EAA4DC,OAA5D;IAEAlC,QAAQ,CAACgB,SAAT,GACKC,UADL,CACgB,OADhB,EAEKC,GAFL,CAESlB,QAAQ,CAACI,IAAT,GAAgBK,WAAhB,CAA4BgB,GAFrC,EAGKa,MAHL,CAGYH,GAHZ,EAIKf,IAJL,CAIU;MAAA,OAAMN,OAAO,EAAb;IAAA,CAJV,EAKKU,KALL,CAKW;MAAA,OAAMT,MAAM,EAAZ;IAAA,CALX;EAMH,CAjBiF,CAArD;AAAA,CAAtB"},"metadata":{},"sourceType":"module"}