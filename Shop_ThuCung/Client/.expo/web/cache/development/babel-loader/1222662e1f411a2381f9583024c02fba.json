{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport React, { useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport CInput from \"../TextInput\";\nimport { useDeviceOrientation } from \"../../useDeviceOrientation\";\nimport { useDetectDevice } from \"../../toolkits\";\nimport { styles } from \"./styles\";\nimport _ from 'lodash';\nvar isTablet = useDetectDevice.isTablet,\n    isIOS = useDetectDevice.isIOS;\n\nvar ic_down = require(\"../../assets/down.png\");\n\nvar defaultProps = {\n  placeholder: 'Select item',\n  activeColor: '#F6F7F8',\n  data: [],\n  style: {},\n  selectedTextProps: {}\n};\nvar DropdownComponent = React.forwardRef(function (props, currentRef) {\n  var orientation = useDeviceOrientation();\n  var testID = props.testID,\n      itemTestIDField = props.itemTestIDField,\n      onChange = props.onChange,\n      style = props.style,\n      containerStyle = props.containerStyle,\n      placeholderStyle = props.placeholderStyle,\n      selectedTextStyle = props.selectedTextStyle,\n      itemContainerStyle = props.itemContainerStyle,\n      itemTextStyle = props.itemTextStyle,\n      inputSearchStyle = props.inputSearchStyle,\n      iconStyle = props.iconStyle,\n      selectedTextProps = props.selectedTextProps,\n      data = props.data,\n      labelField = props.labelField,\n      valueField = props.valueField,\n      value = props.value,\n      activeColor = props.activeColor,\n      fontFamily = props.fontFamily,\n      _props$iconColor = props.iconColor,\n      iconColor = _props$iconColor === void 0 ? 'gray' : _props$iconColor,\n      searchPlaceholder = props.searchPlaceholder,\n      placeholder = props.placeholder,\n      _props$search = props.search,\n      search = _props$search === void 0 ? false : _props$search,\n      _props$maxHeight = props.maxHeight,\n      maxHeight = _props$maxHeight === void 0 ? 340 : _props$maxHeight,\n      _props$disable = props.disable,\n      disable = _props$disable === void 0 ? false : _props$disable,\n      _props$keyboardAvoidi = props.keyboardAvoiding,\n      keyboardAvoiding = _props$keyboardAvoidi === void 0 ? true : _props$keyboardAvoidi,\n      renderLeftIcon = props.renderLeftIcon,\n      renderRightIcon = props.renderRightIcon,\n      renderItem = props.renderItem,\n      renderInputSearch = props.renderInputSearch,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur,\n      _props$autoScroll = props.autoScroll,\n      autoScroll = _props$autoScroll === void 0 ? true : _props$autoScroll,\n      _props$showsVerticalS = props.showsVerticalScrollIndicator,\n      showsVerticalScrollIndicator = _props$showsVerticalS === void 0 ? true : _props$showsVerticalS,\n      _props$dropdownPositi = props.dropdownPosition,\n      dropdownPosition = _props$dropdownPositi === void 0 ? 'auto' : _props$dropdownPositi,\n      flatListProps = props.flatListProps,\n      searchQuery = props.searchQuery,\n      statusBarIsTranslucent = props.statusBarIsTranslucent,\n      backgroundColor = props.backgroundColor,\n      _onChangeText = props.onChangeText;\n  var ref = useRef(null);\n  var refList = useRef(null);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentValue = _useState4[0],\n      setCurrentValue = _useState4[1];\n\n  var _useState5 = useState(data),\n      _useState6 = _slicedToArray(_useState5, 2),\n      listData = _useState6[0],\n      setListData = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      position = _useState8[0],\n      setPosition = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      focus = _useState10[0],\n      setFocus = _useState10[1];\n\n  var _useState11 = useState(0),\n      _useState12 = _slicedToArray(_useState11, 2),\n      keyboardHeight = _useState12[0],\n      setKeyboardHeight = _useState12[1];\n\n  var _useState13 = useState(''),\n      _useState14 = _slicedToArray(_useState13, 2),\n      searchText = _useState14[0],\n      setSearchText = _useState14[1];\n\n  var _Dimensions$get = Dimensions.get('window'),\n      W = _Dimensions$get.width,\n      H = _Dimensions$get.height;\n\n  var styleContainerVertical = useMemo(function () {\n    return {\n      backgroundColor: 'rgba(0,0,0,0.1)',\n      alignItems: 'center'\n    };\n  }, []);\n  var styleHorizontal = useMemo(function () {\n    return {\n      marginBottom: 20,\n      width: W / 2,\n      alignSelf: 'center'\n    };\n  }, [W]);\n  useImperativeHandle(currentRef, function () {\n    return {\n      open: eventOpen,\n      close: eventClose\n    };\n  });\n  useEffect(function () {\n    setListData(_toConsumableArray(data));\n\n    if (searchText) {\n      onSearch(searchText);\n    }\n  }, [data, searchText]);\n\n  var eventOpen = function eventOpen() {\n    if (!disable) {\n      setVisible(true);\n\n      if (onFocus) {\n        onFocus();\n      }\n    }\n  };\n\n  var eventClose = useCallback(function () {\n    if (!disable) {\n      setVisible(false);\n\n      if (onBlur) {\n        onBlur();\n      }\n    }\n  }, [disable, onBlur]);\n  var font = useCallback(function () {\n    if (fontFamily) {\n      return {\n        fontFamily: fontFamily\n      };\n    } else {\n      return {};\n    }\n  }, [fontFamily]);\n\n  var _measure = useCallback(function () {\n    if (ref && ref !== null && ref !== void 0 && ref.current) {\n      ref.current.measure(function (_width, _height, px, py, fx, fy) {\n        var isFull = orientation === 'LANDSCAPE' && !isTablet;\n        var w = Math.floor(px);\n        var top = isFull ? 20 : Math.floor(py) + Math.floor(fy) + 2;\n        var bottom = H - top;\n        var left = I18nManager.isRTL ? W - Math.floor(px) - Math.floor(fx) : Math.floor(fx);\n        setPosition({\n          isFull: isFull,\n          w: w,\n          top: top,\n          bottom: Math.floor(bottom),\n          left: left,\n          height: Math.floor(py)\n        });\n      });\n    }\n  }, [H, W, orientation]);\n\n  var onKeyboardDidShow = useCallback(function (e) {\n    _measure();\n\n    setKeyboardHeight(e.endCoordinates.height);\n  }, [_measure]);\n\n  var onKeyboardDidHide = function onKeyboardDidHide() {\n    setKeyboardHeight(0);\n  };\n\n  useEffect(function () {\n    var susbcriptionKeyboardDidShow = Keyboard.addListener('keyboardDidShow', onKeyboardDidShow);\n    var susbcriptionKeyboardDidHide = Keyboard.addListener('keyboardDidHide', onKeyboardDidHide);\n    return function () {\n      if (typeof (susbcriptionKeyboardDidShow === null || susbcriptionKeyboardDidShow === void 0 ? void 0 : susbcriptionKeyboardDidShow.remove) === 'function') {\n        susbcriptionKeyboardDidShow.remove();\n      } else {\n        Keyboard.removeListener('keyboardDidShow', onKeyboardDidShow);\n      }\n\n      if (typeof (susbcriptionKeyboardDidHide === null || susbcriptionKeyboardDidHide === void 0 ? void 0 : susbcriptionKeyboardDidHide.remove) === 'function') {\n        susbcriptionKeyboardDidHide.remove();\n      } else {\n        Keyboard.removeListener('keyboardDidHide', onKeyboardDidHide);\n      }\n    };\n  }, [onKeyboardDidShow]);\n  var getValue = useCallback(function () {\n    var defaultValue = typeof value === 'object' ? _.get(value, valueField) : value;\n    var getItem = data.filter(function (e) {\n      return _.isEqual(defaultValue, _.get(e, valueField));\n    });\n\n    if (getItem.length > 0) {\n      setCurrentValue(getItem[0]);\n    } else {\n      setCurrentValue(null);\n    }\n  }, [data, value, valueField]);\n  useEffect(function () {\n    getValue();\n  }, [value, data, getValue]);\n  var scrollIndex = useCallback(function () {\n    if (autoScroll && data.length > 0 && listData.length === data.length) {\n      setTimeout(function () {\n        if (refList && refList !== null && refList !== void 0 && refList.current) {\n          var defaultValue = typeof value === 'object' ? _.get(value, valueField) : value;\n\n          var index = _.findIndex(listData, function (e) {\n            return _.isEqual(defaultValue, _.get(e, valueField));\n          });\n\n          if (index > -1 && index <= listData.length - 1) {\n            var _refList$current;\n\n            refList === null || refList === void 0 ? void 0 : (_refList$current = refList.current) === null || _refList$current === void 0 ? void 0 : _refList$current.scrollToIndex({\n              index: index,\n              animated: false\n            });\n          }\n        }\n      }, 200);\n    }\n  }, [autoScroll, data.length, listData, value, valueField]);\n  var showOrClose = useCallback(function () {\n    if (!disable) {\n      _measure();\n\n      setVisible(!visible);\n      setListData(data);\n\n      if (!visible) {\n        if (onFocus) {\n          onFocus();\n        }\n      } else {\n        if (onBlur) {\n          onBlur();\n        }\n      }\n    }\n\n    scrollIndex();\n  }, [_measure, data, disable, onBlur, onFocus, scrollIndex, visible]);\n  var onSearch = useCallback(function (text) {\n    if (text.length > 0) {\n      var defaultFilterFunction = function defaultFilterFunction(e) {\n        var _$get;\n\n        var item = (_$get = _.get(e, labelField)) === null || _$get === void 0 ? void 0 : _$get.toLowerCase().replace(' ', '').normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n        var key = text.toLowerCase().replace(' ', '').normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n        return item.indexOf(key) >= 0;\n      };\n\n      var propSearchFunction = function propSearchFunction(e) {\n        var labelText = _.get(e, labelField);\n\n        return searchQuery === null || searchQuery === void 0 ? void 0 : searchQuery(text, labelText);\n      };\n\n      var dataSearch = data.filter(searchQuery ? propSearchFunction : defaultFilterFunction);\n      setListData(dataSearch);\n    } else {\n      setListData(data);\n    }\n  }, [data, labelField, searchQuery]);\n  var onSelect = useCallback(function (item) {\n    if (_onChangeText) {\n      setSearchText('');\n    }\n\n    onSearch('');\n    setCurrentValue(item);\n    onChange(item);\n    eventClose();\n  }, [eventClose, onChange, _onChangeText, onSearch]);\n\n  var _renderDropdown = function _renderDropdown() {\n    var isSelected = currentValue && _.get(currentValue, valueField);\n\n    return React.createElement(TouchableWithoutFeedback, {\n      testID: testID,\n      onPress: showOrClose\n    }, React.createElement(View, {\n      style: styles.dropdown\n    }, renderLeftIcon === null || renderLeftIcon === void 0 ? void 0 : renderLeftIcon(), React.createElement(Text, _extends({\n      style: [styles.textItem, isSelected !== null ? selectedTextStyle : placeholderStyle, font()]\n    }, selectedTextProps), isSelected !== null ? _.get(currentValue, labelField) : placeholder), renderRightIcon ? renderRightIcon() : React.createElement(Image, {\n      source: ic_down,\n      style: [styles.icon, {\n        tintColor: iconColor\n      }, iconStyle]\n    })));\n  };\n\n  var _renderItem = useCallback(function (_ref) {\n    var item = _ref.item,\n        index = _ref.index;\n\n    var isSelected = currentValue && _.get(currentValue, valueField);\n\n    var selected = _.isEqual(_.get(item, valueField), isSelected);\n\n    return React.createElement(TouchableOpacity, {\n      testID: _.get(item, itemTestIDField || labelField),\n      key: index,\n      onPress: function onPress() {\n        return onSelect(item);\n      },\n      style: [itemContainerStyle, selected && {\n        backgroundColor: activeColor\n      }]\n    }, renderItem ? renderItem(item, selected) : React.createElement(View, {\n      style: styles.item\n    }, React.createElement(Text, {\n      style: [styles.textItem, itemTextStyle, font()]\n    }, _.get(item, labelField))));\n  }, [activeColor, currentValue, font, itemContainerStyle, itemTestIDField, itemTextStyle, labelField, onSelect, renderItem, valueField]);\n\n  var renderSearch = useCallback(function () {\n    if (search) {\n      if (renderInputSearch) {\n        return renderInputSearch(function (text) {\n          if (_onChangeText) {\n            setSearchText(text);\n\n            _onChangeText(text);\n          }\n\n          onSearch(text);\n        });\n      } else {\n        return React.createElement(CInput, {\n          testID: testID + ' input',\n          style: [styles.input, inputSearchStyle],\n          inputStyle: [inputSearchStyle, font()],\n          autoCorrect: false,\n          keyboardType: isIOS ? 'default' : 'visible-password',\n          placeholder: searchPlaceholder,\n          onChangeText: function onChangeText(e) {\n            if (_onChangeText) {\n              setSearchText(e);\n\n              _onChangeText(e);\n            }\n\n            onSearch(e);\n          },\n          placeholderTextColor: \"gray\",\n          iconStyle: [{\n            tintColor: iconColor\n          }, iconStyle],\n          onFocus: function onFocus() {\n            return setFocus(true);\n          },\n          onBlur: function onBlur() {\n            setFocus(false);\n          }\n        });\n      }\n    }\n\n    return null;\n  }, [font, iconColor, iconStyle, inputSearchStyle, _onChangeText, onSearch, renderInputSearch, search, searchPlaceholder, testID]);\n\n  var _renderListTop = useCallback(function () {\n    return React.createElement(TouchableWithoutFeedback, null, React.createElement(View, {\n      style: styles.flexShrink\n    }, React.createElement(FlatList, _extends({\n      testID: testID + ' flatlist'\n    }, flatListProps, {\n      keyboardShouldPersistTaps: \"handled\",\n      ref: refList,\n      onScrollToIndexFailed: scrollIndex,\n      data: listData,\n      inverted: true,\n      renderItem: _renderItem,\n      keyExtractor: function keyExtractor(_item, index) {\n        return index.toString();\n      },\n      showsVerticalScrollIndicator: showsVerticalScrollIndicator\n    })), renderSearch()));\n  }, [_renderItem, flatListProps, listData, renderSearch, scrollIndex, showsVerticalScrollIndicator, testID]);\n\n  var _renderListBottom = useCallback(function () {\n    return React.createElement(TouchableWithoutFeedback, null, React.createElement(View, {\n      style: styles.flexShrink\n    }, renderSearch(), React.createElement(FlatList, _extends({\n      testID: testID + ' flatlist'\n    }, flatListProps, {\n      keyboardShouldPersistTaps: \"handled\",\n      ref: refList,\n      onScrollToIndexFailed: scrollIndex,\n      data: listData,\n      renderItem: _renderItem,\n      keyExtractor: function keyExtractor(_item, index) {\n        return index.toString();\n      },\n      showsVerticalScrollIndicator: showsVerticalScrollIndicator\n    }))));\n  }, [_renderItem, flatListProps, listData, renderSearch, scrollIndex, showsVerticalScrollIndicator, testID]);\n\n  var _renderModal = useCallback(function () {\n    if (visible && position) {\n      var isFull = position.isFull,\n          w = position.w,\n          top = position.top,\n          bottom = position.bottom,\n          left = position.left,\n          height = position.height;\n\n      if (w && top && bottom) {\n        var styleVertical = {\n          left: left,\n          maxHeight: maxHeight\n        };\n        var isTopPosition = dropdownPosition === 'auto' ? bottom < (isIOS ? 200 : search ? 310 : 300) : dropdownPosition === 'top' ? true : false;\n        var topHeight = isTopPosition ? top - height : top;\n        var keyboardStyle = {};\n\n        if (keyboardAvoiding) {\n          if (renderInputSearch) {\n            if (keyboardHeight > 0 && bottom < keyboardHeight + height) {\n              if (isTopPosition) {\n                topHeight = H - keyboardHeight;\n              } else {\n                keyboardStyle = {\n                  backgroundColor: 'rgba(0,0,0,0.1)'\n                };\n                topHeight = H - keyboardHeight - 55;\n              }\n            }\n          } else {\n            if (focus && keyboardHeight > 0 && bottom < keyboardHeight + height) {\n              if (isTopPosition) {\n                topHeight = H - keyboardHeight;\n              } else {\n                keyboardStyle = {\n                  backgroundColor: 'rgba(0,0,0,0.1)'\n                };\n                topHeight = H - keyboardHeight - 55;\n              }\n            }\n          }\n        }\n\n        return React.createElement(Modal, {\n          transparent: true,\n          statusBarTranslucent: statusBarIsTranslucent,\n          visible: visible,\n          supportedOrientations: ['landscape', 'portrait'],\n          onRequestClose: showOrClose\n        }, React.createElement(TouchableWithoutFeedback, {\n          onPress: showOrClose\n        }, React.createElement(View, {\n          style: [styles.flex1, isFull && styleContainerVertical, backgroundColor && {\n            backgroundColor: backgroundColor\n          }, keyboardStyle]\n        }, React.createElement(View, {\n          style: [styles.wrapTop, {\n            height: topHeight,\n            width: w\n          }]\n        }, isTopPosition && React.createElement(View, {\n          style: [{\n            width: w\n          }, styles.container, containerStyle, isFull ? styleHorizontal : styleVertical]\n        }, _renderListTop())), React.createElement(View, {\n          style: styles.flex1\n        }, !isTopPosition && React.createElement(View, {\n          style: [{\n            width: w\n          }, styles.container, containerStyle, isFull ? styleHorizontal : styleVertical]\n        }, _renderListBottom())))));\n      }\n\n      return null;\n    }\n\n    return null;\n  }, [visible, position, maxHeight, dropdownPosition, search, keyboardAvoiding, statusBarIsTranslucent, showOrClose, styleContainerVertical, backgroundColor, containerStyle, styleHorizontal, _renderListTop, _renderListBottom, renderInputSearch, keyboardHeight, H, focus]);\n\n  return React.createElement(View, {\n    style: [styles.mainWrap, style],\n    ref: ref,\n    onLayout: _measure\n  }, _renderDropdown(), _renderModal());\n});\nDropdownComponent.defaultProps = defaultProps;\nexport default DropdownComponent;","map":{"version":3,"mappings":"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","names":["React","useCallback","useEffect","useImperativeHandle","useMemo","useRef","useState","CInput","useDeviceOrientation","useDetectDevice","styles","_","isTablet","isIOS","ic_down","require","defaultProps","placeholder","activeColor","data","style","selectedTextProps","DropdownComponent","forwardRef","props","currentRef","orientation","testID","itemTestIDField","onChange","containerStyle","placeholderStyle","selectedTextStyle","itemContainerStyle","itemTextStyle","inputSearchStyle","iconStyle","labelField","valueField","value","fontFamily","iconColor","searchPlaceholder","search","maxHeight","disable","keyboardAvoiding","renderLeftIcon","renderRightIcon","renderItem","renderInputSearch","onFocus","onBlur","autoScroll","showsVerticalScrollIndicator","dropdownPosition","flatListProps","searchQuery","statusBarIsTranslucent","backgroundColor","onChangeText","ref","refList","visible","setVisible","currentValue","setCurrentValue","listData","setListData","position","setPosition","focus","setFocus","keyboardHeight","setKeyboardHeight","searchText","setSearchText","Dimensions","get","W","width","H","height","styleContainerVertical","alignItems","styleHorizontal","marginBottom","alignSelf","open","eventOpen","close","eventClose","onSearch","font","_measure","current","measure","_width","_height","px","py","fx","fy","isFull","w","Math","floor","top","bottom","left","I18nManager","isRTL","onKeyboardDidShow","e","endCoordinates","onKeyboardDidHide","susbcriptionKeyboardDidShow","Keyboard","addListener","susbcriptionKeyboardDidHide","remove","removeListener","getValue","defaultValue","getItem","filter","isEqual","length","scrollIndex","setTimeout","index","findIndex","scrollToIndex","animated","showOrClose","text","defaultFilterFunction","item","_$get","toLowerCase","replace","normalize","key","indexOf","propSearchFunction","labelText","dataSearch","onSelect","_renderDropdown","isSelected","TouchableWithoutFeedback","onPress","View","dropdown","Text","textItem","Image","source","icon","tintColor","_renderItem","selected","TouchableOpacity","renderSearch","input","inputStyle","autoCorrect","keyboardType","placeholderTextColor","_renderListTop","flexShrink","FlatList","keyboardShouldPersistTaps","onScrollToIndexFailed","inverted","keyExtractor","_item","toString","_renderListBottom","_renderModal","styleVertical","isTopPosition","topHeight","keyboardStyle","Modal","transparent","statusBarTranslucent","supportedOrientations","onRequestClose","flex1","wrapTop","container","mainWrap","onLayout"],"sources":["index.tsx"],"sourcesContent":["import React, {\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Keyboard,\n  Modal,\n  Text,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n  KeyboardEvent,\n  I18nManager,\n} from 'react-native';\nimport CInput from '../TextInput';\nimport { useDeviceOrientation } from '../../useDeviceOrientation';\nimport { useDetectDevice } from '../../toolkits';\nimport { styles } from './styles';\nimport type { DropdownProps } from './model';\nimport _ from 'lodash';\n\nconst { isTablet, isIOS } = useDetectDevice;\nconst ic_down = require('../../assets/down.png');\n\nconst defaultProps = {\n  placeholder: 'Select item',\n  activeColor: '#F6F7F8',\n  data: [],\n  style: {},\n  selectedTextProps: {},\n};\n\nconst DropdownComponent = React.forwardRef<any, DropdownProps>(\n  (props, currentRef) => {\n    const orientation = useDeviceOrientation();\n    const {\n      testID,\n      itemTestIDField,\n      onChange,\n      style,\n      containerStyle,\n      placeholderStyle,\n      selectedTextStyle,\n      itemContainerStyle,\n      itemTextStyle,\n      inputSearchStyle,\n      iconStyle,\n      selectedTextProps,\n      data,\n      labelField,\n      valueField,\n      value,\n      activeColor,\n      fontFamily,\n      iconColor = 'gray',\n      searchPlaceholder,\n      placeholder,\n      search = false,\n      maxHeight = 340,\n      disable = false,\n      keyboardAvoiding = true,\n      renderLeftIcon,\n      renderRightIcon,\n      renderItem,\n      renderInputSearch,\n      onFocus,\n      onBlur,\n      autoScroll = true,\n      showsVerticalScrollIndicator = true,\n      dropdownPosition = 'auto',\n      flatListProps,\n      searchQuery,\n      statusBarIsTranslucent,\n      backgroundColor,\n      onChangeText,\n    } = props;\n\n    const ref = useRef<View>(null);\n    const refList = useRef<FlatList>(null);\n    const [visible, setVisible] = useState<boolean>(false);\n    const [currentValue, setCurrentValue] = useState<any>(null);\n    const [listData, setListData] = useState<any[]>(data);\n    const [position, setPosition] = useState<any>();\n    const [focus, setFocus] = useState<boolean>(false);\n    const [keyboardHeight, setKeyboardHeight] = useState<number>(0);\n    const [searchText, setSearchText] = useState('');\n\n    const { width: W, height: H } = Dimensions.get('window');\n    const styleContainerVertical: ViewStyle = useMemo(() => {\n      return {\n        backgroundColor: 'rgba(0,0,0,0.1)',\n        alignItems: 'center',\n      };\n    }, []);\n    const styleHorizontal: ViewStyle = useMemo(() => {\n      return {\n        marginBottom: 20,\n        width: W / 2,\n        alignSelf: 'center',\n      };\n    }, [W]);\n\n    useImperativeHandle(currentRef, () => {\n      return { open: eventOpen, close: eventClose };\n    });\n\n    useEffect(() => {\n      setListData([...data]);\n      if (searchText) {\n        onSearch(searchText);\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [data, searchText]);\n\n    const eventOpen = () => {\n      if (!disable) {\n        setVisible(true);\n        if (onFocus) {\n          onFocus();\n        }\n      }\n    };\n\n    const eventClose = useCallback(() => {\n      if (!disable) {\n        setVisible(false);\n        if (onBlur) {\n          onBlur();\n        }\n      }\n    }, [disable, onBlur]);\n\n    const font = useCallback(() => {\n      if (fontFamily) {\n        return {\n          fontFamily: fontFamily,\n        };\n      } else {\n        return {};\n      }\n    }, [fontFamily]);\n\n    const _measure = useCallback(() => {\n      if (ref && ref?.current) {\n        ref.current.measure((_width, _height, px, py, fx, fy) => {\n          const isFull = orientation === 'LANDSCAPE' && !isTablet;\n          const w = Math.floor(px);\n          const top = isFull ? 20 : Math.floor(py) + Math.floor(fy) + 2;\n          const bottom = H - top;\n          const left = I18nManager.isRTL\n            ? W - Math.floor(px) - Math.floor(fx)\n            : Math.floor(fx);\n\n          setPosition({\n            isFull,\n            w,\n            top,\n            bottom: Math.floor(bottom),\n            left,\n            height: Math.floor(py),\n          });\n        });\n      }\n    }, [H, W, orientation]);\n\n    const onKeyboardDidShow = useCallback(\n      (e: KeyboardEvent) => {\n        _measure();\n        setKeyboardHeight(e.endCoordinates.height);\n      },\n      [_measure]\n    );\n\n    const onKeyboardDidHide = () => {\n      setKeyboardHeight(0);\n    };\n\n    useEffect(() => {\n      const susbcriptionKeyboardDidShow = Keyboard.addListener(\n        'keyboardDidShow',\n        onKeyboardDidShow\n      );\n      const susbcriptionKeyboardDidHide = Keyboard.addListener(\n        'keyboardDidHide',\n        onKeyboardDidHide\n      );\n\n      return () => {\n        if (typeof susbcriptionKeyboardDidShow?.remove === 'function') {\n          susbcriptionKeyboardDidShow.remove();\n        } else {\n          Keyboard.removeListener('keyboardDidShow', onKeyboardDidShow);\n        }\n\n        if (typeof susbcriptionKeyboardDidHide?.remove === 'function') {\n          susbcriptionKeyboardDidHide.remove();\n        } else {\n          Keyboard.removeListener('keyboardDidHide', onKeyboardDidHide);\n        }\n      };\n    }, [onKeyboardDidShow]);\n\n    const getValue = useCallback(() => {\n      const defaultValue =\n        typeof value === 'object' ? _.get(value, valueField) : value;\n\n      const getItem = data.filter((e) =>\n        _.isEqual(defaultValue, _.get(e, valueField))\n      );\n\n      if (getItem.length > 0) {\n        setCurrentValue(getItem[0]);\n      } else {\n        setCurrentValue(null);\n      }\n    }, [data, value, valueField]);\n\n    useEffect(() => {\n      getValue();\n    }, [value, data, getValue]);\n\n    const scrollIndex = useCallback(() => {\n      if (autoScroll && data.length > 0 && listData.length === data.length) {\n        setTimeout(() => {\n          if (refList && refList?.current) {\n            const defaultValue =\n              typeof value === 'object' ? _.get(value, valueField) : value;\n\n            const index = _.findIndex(listData, (e: any) =>\n              _.isEqual(defaultValue, _.get(e, valueField))\n            );\n            if (index > -1 && index <= listData.length - 1) {\n              refList?.current?.scrollToIndex({\n                index: index,\n                animated: false,\n              });\n            }\n          }\n        }, 200);\n      }\n    }, [autoScroll, data.length, listData, value, valueField]);\n\n    const showOrClose = useCallback(() => {\n      if (!disable) {\n        _measure();\n        setVisible(!visible);\n        setListData(data);\n\n        if (!visible) {\n          if (onFocus) {\n            onFocus();\n          }\n        } else {\n          if (onBlur) {\n            onBlur();\n          }\n        }\n      }\n      scrollIndex();\n    }, [_measure, data, disable, onBlur, onFocus, scrollIndex, visible]);\n\n    const onSearch = useCallback(\n      (text: string) => {\n        if (text.length > 0) {\n          const defaultFilterFunction = (e: any) => {\n            const item = _.get(e, labelField)\n              ?.toLowerCase()\n              .replace(' ', '')\n              .normalize('NFD')\n              .replace(/[\\u0300-\\u036f]/g, '');\n            const key = text\n              .toLowerCase()\n              .replace(' ', '')\n              .normalize('NFD')\n              .replace(/[\\u0300-\\u036f]/g, '');\n\n            return item.indexOf(key) >= 0;\n          };\n\n          const propSearchFunction = (e: any) => {\n            const labelText = _.get(e, labelField);\n\n            return searchQuery?.(text, labelText);\n          };\n\n          const dataSearch = data.filter(\n            searchQuery ? propSearchFunction : defaultFilterFunction\n          );\n          setListData(dataSearch);\n        } else {\n          setListData(data);\n        }\n      },\n      [data, labelField, searchQuery]\n    );\n\n    const onSelect = useCallback(\n      (item: any) => {\n        if (onChangeText) {\n          setSearchText('');\n        }\n        onSearch('');\n        setCurrentValue(item);\n        onChange(item);\n        eventClose();\n      },\n      [eventClose, onChange, onChangeText, onSearch]\n    );\n\n    const _renderDropdown = () => {\n      const isSelected = currentValue && _.get(currentValue, valueField);\n      return (\n        <TouchableWithoutFeedback testID={testID} onPress={showOrClose}>\n          <View style={styles.dropdown}>\n            {renderLeftIcon?.()}\n            <Text\n              style={[\n                styles.textItem,\n                isSelected !== null ? selectedTextStyle : placeholderStyle,\n                font(),\n              ]}\n              {...selectedTextProps}\n            >\n              {isSelected !== null\n                ? _.get(currentValue, labelField)\n                : placeholder}\n            </Text>\n            {renderRightIcon ? (\n              renderRightIcon()\n            ) : (\n              <Image\n                source={ic_down}\n                style={[styles.icon, { tintColor: iconColor }, iconStyle]}\n              />\n            )}\n          </View>\n        </TouchableWithoutFeedback>\n      );\n    };\n\n    const _renderItem = useCallback(\n      ({ item, index }: { item: any; index: number }) => {\n        const isSelected = currentValue && _.get(currentValue, valueField);\n        const selected = _.isEqual(_.get(item, valueField), isSelected);\n        return (\n          <TouchableOpacity\n            testID={_.get(item, itemTestIDField || labelField)}\n            key={index}\n            onPress={() => onSelect(item)}\n            style={[\n              itemContainerStyle,\n              selected && {\n                backgroundColor: activeColor,\n              },\n            ]}\n          >\n            {renderItem ? (\n              renderItem(item, selected)\n            ) : (\n              <View style={styles.item}>\n                <Text style={[styles.textItem, itemTextStyle, font()]}>\n                  {_.get(item, labelField)}\n                </Text>\n              </View>\n            )}\n          </TouchableOpacity>\n        );\n      },\n      [\n        activeColor,\n        currentValue,\n        font,\n        itemContainerStyle,\n        itemTestIDField,\n        itemTextStyle,\n        labelField,\n        onSelect,\n        renderItem,\n        valueField,\n      ]\n    );\n\n    const renderSearch = useCallback(() => {\n      if (search) {\n        if (renderInputSearch) {\n          return renderInputSearch((text) => {\n            if (onChangeText) {\n              setSearchText(text);\n              onChangeText(text);\n            }\n            onSearch(text);\n          });\n        } else {\n          return (\n            <CInput\n              testID={testID + ' input'}\n              style={[styles.input, inputSearchStyle]}\n              inputStyle={[inputSearchStyle, font()]}\n              autoCorrect={false}\n              keyboardType={isIOS ? 'default' : 'visible-password'}\n              placeholder={searchPlaceholder}\n              onChangeText={(e) => {\n                if (onChangeText) {\n                  setSearchText(e);\n                  onChangeText(e);\n                }\n                onSearch(e);\n              }}\n              placeholderTextColor=\"gray\"\n              iconStyle={[{ tintColor: iconColor }, iconStyle]}\n              onFocus={() => setFocus(true)}\n              onBlur={() => {\n                setFocus(false);\n              }}\n            />\n          );\n        }\n      }\n      return null;\n    }, [\n      font,\n      iconColor,\n      iconStyle,\n      inputSearchStyle,\n      onChangeText,\n      onSearch,\n      renderInputSearch,\n      search,\n      searchPlaceholder,\n      testID,\n    ]);\n\n    const _renderListTop = useCallback(() => {\n      return (\n        <TouchableWithoutFeedback>\n          <View style={styles.flexShrink}>\n            <FlatList\n              testID={testID + ' flatlist'}\n              {...flatListProps}\n              keyboardShouldPersistTaps=\"handled\"\n              ref={refList}\n              onScrollToIndexFailed={scrollIndex}\n              data={listData}\n              inverted\n              renderItem={_renderItem}\n              keyExtractor={(_item, index) => index.toString()}\n              showsVerticalScrollIndicator={showsVerticalScrollIndicator}\n            />\n            {renderSearch()}\n          </View>\n        </TouchableWithoutFeedback>\n      );\n    }, [\n      _renderItem,\n      flatListProps,\n      listData,\n      renderSearch,\n      scrollIndex,\n      showsVerticalScrollIndicator,\n      testID,\n    ]);\n\n    const _renderListBottom = useCallback(() => {\n      return (\n        <TouchableWithoutFeedback>\n          <View style={styles.flexShrink}>\n            {renderSearch()}\n            <FlatList\n              testID={testID + ' flatlist'}\n              {...flatListProps}\n              keyboardShouldPersistTaps=\"handled\"\n              ref={refList}\n              onScrollToIndexFailed={scrollIndex}\n              data={listData}\n              renderItem={_renderItem}\n              keyExtractor={(_item, index) => index.toString()}\n              showsVerticalScrollIndicator={showsVerticalScrollIndicator}\n            />\n          </View>\n        </TouchableWithoutFeedback>\n      );\n    }, [\n      _renderItem,\n      flatListProps,\n      listData,\n      renderSearch,\n      scrollIndex,\n      showsVerticalScrollIndicator,\n      testID,\n    ]);\n\n    const _renderModal = useCallback(() => {\n      if (visible && position) {\n        const { isFull, w, top, bottom, left, height } = position;\n        if (w && top && bottom) {\n          const styleVertical: ViewStyle = { left: left, maxHeight: maxHeight };\n          const isTopPosition =\n            dropdownPosition === 'auto'\n              ? bottom < (isIOS ? 200 : search ? 310 : 300)\n              : dropdownPosition === 'top'\n              ? true\n              : false;\n          let topHeight = isTopPosition ? top - height : top;\n\n          let keyboardStyle: ViewStyle = {};\n\n          if (keyboardAvoiding) {\n            if (renderInputSearch) {\n              if (keyboardHeight > 0 && bottom < keyboardHeight + height) {\n                if (isTopPosition) {\n                  topHeight = H - keyboardHeight;\n                } else {\n                  keyboardStyle = { backgroundColor: 'rgba(0,0,0,0.1)' };\n                  topHeight = H - keyboardHeight - 55;\n                }\n              }\n            } else {\n              if (\n                focus &&\n                keyboardHeight > 0 &&\n                bottom < keyboardHeight + height\n              ) {\n                if (isTopPosition) {\n                  topHeight = H - keyboardHeight;\n                } else {\n                  keyboardStyle = { backgroundColor: 'rgba(0,0,0,0.1)' };\n                  topHeight = H - keyboardHeight - 55;\n                }\n              }\n            }\n          }\n\n          return (\n            <Modal\n              transparent\n              statusBarTranslucent={statusBarIsTranslucent}\n              visible={visible}\n              supportedOrientations={['landscape', 'portrait']}\n              onRequestClose={showOrClose}\n            >\n              <TouchableWithoutFeedback onPress={showOrClose}>\n                <View\n                  style={[\n                    styles.flex1,\n                    isFull && styleContainerVertical,\n                    backgroundColor && { backgroundColor: backgroundColor },\n                    keyboardStyle,\n                  ]}\n                >\n                  <View\n                    style={[\n                      styles.wrapTop,\n                      {\n                        height: topHeight,\n                        width: w,\n                      },\n                    ]}\n                  >\n                    {isTopPosition && (\n                      <View\n                        style={[\n                          { width: w },\n                          styles.container,\n                          containerStyle,\n                          isFull ? styleHorizontal : styleVertical,\n                        ]}\n                      >\n                        {_renderListTop()}\n                      </View>\n                    )}\n                  </View>\n                  <View style={styles.flex1}>\n                    {!isTopPosition && (\n                      <View\n                        style={[\n                          { width: w },\n                          styles.container,\n                          containerStyle,\n                          isFull ? styleHorizontal : styleVertical,\n                        ]}\n                      >\n                        {_renderListBottom()}\n                      </View>\n                    )}\n                  </View>\n                </View>\n              </TouchableWithoutFeedback>\n            </Modal>\n          );\n        }\n        return null;\n      }\n      return null;\n    }, [\n      visible,\n      position,\n      maxHeight,\n      dropdownPosition,\n      search,\n      keyboardAvoiding,\n      statusBarIsTranslucent,\n      showOrClose,\n      styleContainerVertical,\n      backgroundColor,\n      containerStyle,\n      styleHorizontal,\n      _renderListTop,\n      _renderListBottom,\n      renderInputSearch,\n      keyboardHeight,\n      H,\n      focus,\n    ]);\n\n    return (\n      <View style={[styles.mainWrap, style]} ref={ref} onLayout={_measure}>\n        {_renderDropdown()}\n        {_renderModal()}\n      </View>\n    );\n  }\n);\n\nDropdownComponent.defaultProps = defaultProps;\n\nexport default DropdownComponent;\n"]},"metadata":{},"sourceType":"module"}