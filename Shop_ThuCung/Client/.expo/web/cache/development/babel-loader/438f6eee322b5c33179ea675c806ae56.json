{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport React, { useCallback, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport CInput from \"../TextInput\";\nimport { useDeviceOrientation } from \"../../useDeviceOrientation\";\nimport { useDetectDevice } from \"../../toolkits\";\nimport { styles } from \"./styles\";\nimport _ from 'lodash';\nvar isTablet = useDetectDevice.isTablet,\n    isIOS = useDetectDevice.isIOS;\n\nvar ic_down = require(\"../../assets/down.png\");\n\nvar defaultProps = {\n  placeholder: 'Select item',\n  activeColor: '#F6F7F8',\n  data: [],\n  style: {}\n};\nvar MultiSelectComponent = React.forwardRef(function (props, currentRef) {\n  var orientation = useDeviceOrientation();\n  var testID = props.testID,\n      itemTestIDField = props.itemTestIDField,\n      onChange = props.onChange,\n      data = props.data,\n      value = props.value,\n      style = props.style,\n      labelField = props.labelField,\n      valueField = props.valueField,\n      selectedStyle = props.selectedStyle,\n      selectedTextStyle = props.selectedTextStyle,\n      itemContainerStyle = props.itemContainerStyle,\n      itemTextStyle = props.itemTextStyle,\n      iconStyle = props.iconStyle,\n      activeColor = props.activeColor,\n      containerStyle = props.containerStyle,\n      fontFamily = props.fontFamily,\n      placeholderStyle = props.placeholderStyle,\n      _props$iconColor = props.iconColor,\n      iconColor = _props$iconColor === void 0 ? 'gray' : _props$iconColor,\n      inputSearchStyle = props.inputSearchStyle,\n      searchPlaceholder = props.searchPlaceholder,\n      placeholder = props.placeholder,\n      _props$search = props.search,\n      search = _props$search === void 0 ? false : _props$search,\n      _props$maxHeight = props.maxHeight,\n      maxHeight = _props$maxHeight === void 0 ? 340 : _props$maxHeight,\n      maxSelect = props.maxSelect,\n      _props$disable = props.disable,\n      disable = _props$disable === void 0 ? false : _props$disable,\n      _props$keyboardAvoidi = props.keyboardAvoiding,\n      keyboardAvoiding = _props$keyboardAvoidi === void 0 ? true : _props$keyboardAvoidi,\n      _props$inside = props.inside,\n      inside = _props$inside === void 0 ? false : _props$inside,\n      renderItem = props.renderItem,\n      renderLeftIcon = props.renderLeftIcon,\n      renderRightIcon = props.renderRightIcon,\n      renderSelectedItem = props.renderSelectedItem,\n      renderInputSearch = props.renderInputSearch,\n      onFocus = props.onFocus,\n      onBlur = props.onBlur,\n      _props$showsVerticalS = props.showsVerticalScrollIndicator,\n      showsVerticalScrollIndicator = _props$showsVerticalS === void 0 ? true : _props$showsVerticalS,\n      _props$dropdownPositi = props.dropdownPosition,\n      dropdownPosition = _props$dropdownPositi === void 0 ? 'auto' : _props$dropdownPositi,\n      flatListProps = props.flatListProps,\n      _props$alwaysRenderIt = props.alwaysRenderItemSelected,\n      alwaysRenderItemSelected = _props$alwaysRenderIt === void 0 ? false : _props$alwaysRenderIt,\n      searchQuery = props.searchQuery,\n      statusBarIsTranslucent = props.statusBarIsTranslucent,\n      backgroundColor = props.backgroundColor,\n      _onChangeText = props.onChangeText;\n  var ref = useRef(null);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      setVisible = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentValue = _useState4[0],\n      setCurrentValue = _useState4[1];\n\n  var _useState5 = useState(data),\n      _useState6 = _slicedToArray(_useState5, 2),\n      listData = _useState6[0],\n      setListData = _useState6[1];\n\n  var _useState7 = useState(Math.random()),\n      _useState8 = _slicedToArray(_useState7, 2),\n      setKey = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      position = _useState10[0],\n      setPosition = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      focus = _useState12[0],\n      setFocus = _useState12[1];\n\n  var _useState13 = useState(0),\n      _useState14 = _slicedToArray(_useState13, 2),\n      keyboardHeight = _useState14[0],\n      setKeyboardHeight = _useState14[1];\n\n  var _useState15 = useState(''),\n      _useState16 = _slicedToArray(_useState15, 2),\n      searchText = _useState16[0],\n      setSearchText = _useState16[1];\n\n  var _Dimensions$get = Dimensions.get('window'),\n      W = _Dimensions$get.width,\n      H = _Dimensions$get.height;\n\n  var styleContainerVertical = useMemo(function () {\n    return {\n      backgroundColor: 'rgba(0,0,0,0.1)',\n      alignItems: 'center'\n    };\n  }, []);\n  var styleHorizontal = useMemo(function () {\n    return {\n      marginBottom: 20,\n      width: W / 2,\n      alignSelf: 'center'\n    };\n  }, [W]);\n  useImperativeHandle(currentRef, function () {\n    return {\n      open: eventOpen,\n      close: eventClose\n    };\n  });\n  useEffect(function () {\n    setListData(_toConsumableArray(data));\n\n    if (searchText) {\n      onSearch(searchText);\n    }\n  }, [data, searchText]);\n\n  var eventOpen = function eventOpen() {\n    if (!disable) {\n      setVisible(true);\n\n      if (onFocus) {\n        onFocus();\n      }\n    }\n  };\n\n  var eventClose = function eventClose() {\n    if (!disable) {\n      setVisible(false);\n\n      if (onBlur) {\n        onBlur();\n      }\n    }\n  };\n\n  var font = useCallback(function () {\n    if (fontFamily) {\n      return {\n        fontFamily: fontFamily\n      };\n    } else {\n      return {};\n    }\n  }, [fontFamily]);\n  var getValue = useCallback(function () {\n    setCurrentValue(value ? _toConsumableArray(value) : []);\n  }, [value]);\n\n  var _measure = useCallback(function () {\n    if (ref && ref !== null && ref !== void 0 && ref.current) {\n      ref.current.measure(function (_width, _height, px, py, fx, fy) {\n        var isFull = orientation === 'LANDSCAPE' && !isTablet;\n        var w = Math.floor(px);\n        var top = isFull ? 20 : Math.floor(py) + Math.floor(fy) + 2;\n        var bottom = H - top;\n        var left = I18nManager.isRTL ? W - Math.floor(px) - Math.floor(fx) : Math.floor(fx);\n        setPosition({\n          isFull: isFull,\n          w: w,\n          top: top,\n          bottom: Math.floor(bottom),\n          left: left,\n          height: Math.floor(py)\n        });\n      });\n    }\n  }, [H, W, orientation]);\n\n  var onKeyboardDidShow = useCallback(function (e) {\n    _measure();\n\n    setKeyboardHeight(e.endCoordinates.height);\n  }, [_measure]);\n\n  var onKeyboardDidHide = function onKeyboardDidHide() {\n    setKeyboardHeight(0);\n  };\n\n  useEffect(function () {\n    var susbcriptionKeyboardDidShow = Keyboard.addListener('keyboardDidShow', onKeyboardDidShow);\n    var susbcriptionKeyboardDidHide = Keyboard.addListener('keyboardDidHide', onKeyboardDidHide);\n    return function () {\n      if (typeof (susbcriptionKeyboardDidShow === null || susbcriptionKeyboardDidShow === void 0 ? void 0 : susbcriptionKeyboardDidShow.remove) === 'function') {\n        susbcriptionKeyboardDidShow.remove();\n      } else {\n        Keyboard.removeListener('keyboardDidShow', onKeyboardDidShow);\n      }\n\n      if (typeof (susbcriptionKeyboardDidHide === null || susbcriptionKeyboardDidHide === void 0 ? void 0 : susbcriptionKeyboardDidHide.remove) === 'function') {\n        susbcriptionKeyboardDidHide.remove();\n      } else {\n        Keyboard.removeListener('keyboardDidHide', onKeyboardDidHide);\n      }\n    };\n  }, [onKeyboardDidShow]);\n  useEffect(function () {\n    getValue();\n  }, [getValue, value]);\n  var showOrClose = useCallback(function () {\n    if (!disable) {\n      _measure();\n\n      setVisible(!visible);\n      setListData(data);\n\n      if (!visible) {\n        if (onFocus) {\n          onFocus();\n        }\n      } else {\n        if (onBlur) {\n          onBlur();\n        }\n      }\n    }\n  }, [_measure, data, disable, onBlur, onFocus, visible]);\n  var onSearch = useCallback(function (text) {\n    if (text.length > 0) {\n      var defaultFilterFunction = function defaultFilterFunction(e) {\n        var _$get;\n\n        var item = (_$get = _.get(e, labelField)) === null || _$get === void 0 ? void 0 : _$get.toLowerCase().replace(' ', '').normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n        var key = text.toLowerCase().replace(' ', '').normalize('NFD').replace(/[\\u0300-\\u036f]/g, '');\n        return item.indexOf(key) >= 0;\n      };\n\n      var propSearchFunction = function propSearchFunction(e) {\n        var labelText = _.get(e, labelField);\n\n        return searchQuery === null || searchQuery === void 0 ? void 0 : searchQuery(text, labelText);\n      };\n\n      var dataSearch = data.filter(searchQuery ? propSearchFunction : defaultFilterFunction);\n      setListData(dataSearch);\n    } else {\n      setListData(data);\n    }\n  }, [data, labelField, searchQuery]);\n  var onSelect = useCallback(function (item) {\n    var index = currentValue.findIndex(function (e) {\n      return e === _.get(item, valueField);\n    });\n\n    if (index > -1) {\n      currentValue.splice(index, 1);\n    } else {\n      if (maxSelect) {\n        if (currentValue.length < maxSelect) {\n          currentValue.push(_.get(item, valueField));\n        }\n      } else {\n        currentValue.push(_.get(item, valueField));\n      }\n    }\n\n    onChange(currentValue);\n    setKey(Math.random());\n  }, [currentValue, maxSelect, onChange, valueField]);\n\n  var _renderDropdown = function _renderDropdown() {\n    return React.createElement(TouchableWithoutFeedback, {\n      testID: testID,\n      onPress: showOrClose\n    }, React.createElement(View, {\n      style: styles.dropdown\n    }, renderLeftIcon === null || renderLeftIcon === void 0 ? void 0 : renderLeftIcon(), React.createElement(Text, {\n      style: [styles.textItem, placeholderStyle, font()]\n    }, placeholder), renderRightIcon ? renderRightIcon() : React.createElement(Image, {\n      source: ic_down,\n      style: [styles.icon, {\n        tintColor: iconColor\n      }, iconStyle]\n    })));\n  };\n\n  var checkSelected = useCallback(function (item) {\n    var index = currentValue.findIndex(function (e) {\n      return e === _.get(item, valueField);\n    });\n    return index > -1;\n  }, [currentValue, valueField]);\n\n  var _renderItem = useCallback(function (_ref) {\n    var item = _ref.item,\n        index = _ref.index;\n    var selected = checkSelected(item);\n    return React.createElement(TouchableOpacity, {\n      testID: _.get(item, itemTestIDField || labelField),\n      key: index,\n      onPress: function onPress() {\n        return onSelect(item);\n      },\n      style: [itemContainerStyle, selected && _objectSpread({\n        backgroundColor: activeColor\n      }, styles.wrapItem)]\n    }, renderItem ? renderItem(item, selected) : React.createElement(View, {\n      style: styles.item\n    }, React.createElement(Text, {\n      style: [styles.textItem, itemTextStyle, font()]\n    }, _.get(item, labelField))));\n  }, [activeColor, checkSelected, font, itemContainerStyle, itemTestIDField, itemTextStyle, labelField, onSelect, renderItem]);\n\n  var renderSearch = useCallback(function () {\n    if (search) {\n      if (renderInputSearch) {\n        return renderInputSearch(function (text) {\n          if (_onChangeText) {\n            setSearchText(text);\n\n            _onChangeText(text);\n          }\n\n          onSearch(text);\n        });\n      } else {\n        return React.createElement(CInput, {\n          testID: testID + ' input',\n          style: [styles.input, inputSearchStyle],\n          inputStyle: [inputSearchStyle, font()],\n          autoCorrect: false,\n          keyboardType: isIOS ? 'default' : 'visible-password',\n          placeholder: searchPlaceholder,\n          onChangeText: function onChangeText(e) {\n            if (_onChangeText) {\n              setSearchText(e);\n\n              _onChangeText(e);\n            }\n\n            onSearch(e);\n          },\n          placeholderTextColor: \"gray\",\n          iconStyle: [{\n            tintColor: iconColor\n          }, iconStyle],\n          onFocus: function onFocus() {\n            return setFocus(true);\n          },\n          onBlur: function onBlur() {\n            setFocus(false);\n          }\n        });\n      }\n    }\n\n    return null;\n  }, [font, iconColor, iconStyle, inputSearchStyle, _onChangeText, onSearch, renderInputSearch, search, searchPlaceholder, testID]);\n\n  var _renderListTop = useCallback(function () {\n    return React.createElement(TouchableWithoutFeedback, null, React.createElement(View, {\n      style: styles.flexShrink\n    }, React.createElement(FlatList, _extends({\n      testID: testID + ' flatlist'\n    }, flatListProps, {\n      keyboardShouldPersistTaps: \"handled\",\n      data: listData,\n      inverted: true,\n      renderItem: _renderItem,\n      keyExtractor: function keyExtractor(_item, index) {\n        return index.toString();\n      },\n      showsVerticalScrollIndicator: showsVerticalScrollIndicator\n    })), renderSearch()));\n  }, [_renderItem, flatListProps, listData, renderSearch, showsVerticalScrollIndicator, testID]);\n\n  var _renderListBottom = useCallback(function () {\n    return React.createElement(TouchableWithoutFeedback, null, React.createElement(View, {\n      style: styles.flexShrink\n    }, renderSearch(), React.createElement(FlatList, _extends({\n      testID: testID + ' flatlist'\n    }, flatListProps, {\n      keyboardShouldPersistTaps: \"handled\",\n      data: listData,\n      renderItem: _renderItem,\n      keyExtractor: function keyExtractor(_item, index) {\n        return index.toString();\n      },\n      showsVerticalScrollIndicator: showsVerticalScrollIndicator\n    }))));\n  }, [_renderItem, flatListProps, listData, renderSearch, showsVerticalScrollIndicator, testID]);\n\n  var _renderModal = useCallback(function () {\n    if (visible && position) {\n      var isFull = position.isFull,\n          w = position.w,\n          top = position.top,\n          bottom = position.bottom,\n          left = position.left,\n          height = position.height;\n\n      if (w && top && bottom) {\n        var styleVertical = {\n          left: left,\n          maxHeight: maxHeight\n        };\n        var isTopPosition = dropdownPosition === 'auto' ? bottom < (isIOS ? 200 : search ? 310 : 300) : dropdownPosition === 'top' ? true : false;\n        var topHeight = isTopPosition ? top - height : top;\n        var keyboardStyle = {};\n\n        if (keyboardAvoiding) {\n          if (renderInputSearch) {\n            if (keyboardHeight > 0 && bottom < keyboardHeight + height) {\n              if (isTopPosition) {\n                topHeight = H - keyboardHeight;\n              } else {\n                keyboardStyle = {\n                  backgroundColor: 'rgba(0,0,0,0.1)'\n                };\n                topHeight = H - keyboardHeight - 55;\n              }\n            }\n          } else {\n            if (focus && keyboardHeight > 0 && bottom < keyboardHeight + height) {\n              if (isTopPosition) {\n                topHeight = H - keyboardHeight;\n              } else {\n                keyboardStyle = {\n                  backgroundColor: 'rgba(0,0,0,0.1)'\n                };\n                topHeight = H - keyboardHeight - 55;\n              }\n            }\n          }\n        }\n\n        return React.createElement(Modal, {\n          transparent: true,\n          statusBarTranslucent: statusBarIsTranslucent,\n          visible: visible,\n          supportedOrientations: ['landscape', 'portrait'],\n          onRequestClose: showOrClose\n        }, React.createElement(TouchableWithoutFeedback, {\n          onPress: showOrClose\n        }, React.createElement(View, {\n          style: [styles.flex1, isFull && styleContainerVertical, backgroundColor && {\n            backgroundColor: backgroundColor\n          }, keyboardStyle]\n        }, React.createElement(View, {\n          style: [styles.wrapTop, {\n            height: topHeight,\n            width: w\n          }]\n        }, isTopPosition && React.createElement(View, {\n          style: [{\n            width: w\n          }, styles.container, containerStyle, isFull ? styleHorizontal : styleVertical]\n        }, _renderListTop())), React.createElement(View, {\n          style: styles.flex1\n        }, !isTopPosition && React.createElement(View, {\n          style: [{\n            width: w\n          }, styles.container, containerStyle, isFull ? styleHorizontal : styleVertical]\n        }, _renderListBottom())))));\n      }\n\n      return null;\n    }\n\n    return null;\n  }, [visible, position, maxHeight, dropdownPosition, search, keyboardAvoiding, statusBarIsTranslucent, showOrClose, styleContainerVertical, backgroundColor, containerStyle, styleHorizontal, _renderListTop, _renderListBottom, renderInputSearch, keyboardHeight, H, focus]);\n\n  var unSelect = function unSelect(item) {\n    if (!disable) {\n      onSelect(item);\n    }\n  };\n\n  var _renderItemSelected = function _renderItemSelected(inside) {\n    var list = data.filter(function (e) {\n      var check = value === null || value === void 0 ? void 0 : value.indexOf(_.get(e, valueField));\n\n      if (check !== -1) {\n        return e;\n      }\n    });\n    return React.createElement(View, {\n      style: [styles.rowSelectedItem, inside && styles.flex1]\n    }, list.map(function (e) {\n      if (renderSelectedItem) {\n        return React.createElement(TouchableOpacity, {\n          testID: _.get(e, itemTestIDField || labelField),\n          key: _.get(e, labelField),\n          onPress: function onPress() {\n            return unSelect(e);\n          }\n        }, renderSelectedItem(e, function () {\n          unSelect(e);\n        }));\n      } else {\n        return React.createElement(TouchableOpacity, {\n          testID: _.get(e, itemTestIDField || labelField),\n          key: _.get(e, labelField),\n          style: [styles.selectedItem, selectedStyle],\n          onPress: function onPress() {\n            return unSelect(e);\n          }\n        }, React.createElement(Text, {\n          style: [styles.selectedTextLeftItem, selectedTextStyle, font()]\n        }, _.get(e, labelField)), React.createElement(Text, {\n          style: [styles.selectedTextItem, selectedTextStyle]\n        }, \"\\u24E7\"));\n      }\n    }));\n  };\n\n  var _renderInside = function _renderInside() {\n    return React.createElement(View, {\n      style: [styles.mainWrap, style],\n      ref: ref,\n      onLayout: _measure\n    }, _renderDropdownInside(), _renderModal());\n  };\n\n  var _renderDropdownInside = function _renderDropdownInside() {\n    return React.createElement(TouchableWithoutFeedback, {\n      testID: testID,\n      onPress: showOrClose\n    }, React.createElement(View, {\n      style: styles.dropdownInside\n    }, renderLeftIcon === null || renderLeftIcon === void 0 ? void 0 : renderLeftIcon(), value && (value === null || value === void 0 ? void 0 : value.length) > 0 ? _renderItemSelected(true) : React.createElement(Text, {\n      style: [styles.textItem, placeholderStyle, font()]\n    }, placeholder), renderRightIcon ? renderRightIcon() : React.createElement(Image, {\n      source: ic_down,\n      style: [styles.icon, {\n        tintColor: iconColor\n      }, iconStyle]\n    })));\n  };\n\n  if (inside) {\n    return _renderInside();\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(View, {\n    style: [styles.mainWrap, style],\n    ref: ref,\n    onLayout: _measure\n  }, _renderDropdown(), _renderModal()), (!visible || alwaysRenderItemSelected) && _renderItemSelected(false));\n});\nMultiSelectComponent.defaultProps = defaultProps;\nexport default MultiSelectComponent;","map":{"version":3,"mappings":"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","names":["React","useCallback","useEffect","useImperativeHandle","useMemo","useRef","useState","CInput","useDeviceOrientation","useDetectDevice","styles","_","isTablet","isIOS","ic_down","require","defaultProps","placeholder","activeColor","data","style","MultiSelectComponent","forwardRef","props","currentRef","orientation","testID","itemTestIDField","onChange","value","labelField","valueField","selectedStyle","selectedTextStyle","itemContainerStyle","itemTextStyle","iconStyle","containerStyle","fontFamily","placeholderStyle","iconColor","inputSearchStyle","searchPlaceholder","search","maxHeight","maxSelect","disable","keyboardAvoiding","inside","renderItem","renderLeftIcon","renderRightIcon","renderSelectedItem","renderInputSearch","onFocus","onBlur","showsVerticalScrollIndicator","dropdownPosition","flatListProps","alwaysRenderItemSelected","searchQuery","statusBarIsTranslucent","backgroundColor","onChangeText","ref","visible","setVisible","currentValue","setCurrentValue","listData","setListData","Math","random","setKey","position","setPosition","focus","setFocus","keyboardHeight","setKeyboardHeight","searchText","setSearchText","Dimensions","get","W","width","H","height","styleContainerVertical","alignItems","styleHorizontal","marginBottom","alignSelf","open","eventOpen","close","eventClose","onSearch","font","getValue","_measure","current","measure","_width","_height","px","py","fx","fy","isFull","w","floor","top","bottom","left","I18nManager","isRTL","onKeyboardDidShow","e","endCoordinates","onKeyboardDidHide","susbcriptionKeyboardDidShow","Keyboard","addListener","susbcriptionKeyboardDidHide","remove","removeListener","showOrClose","text","length","defaultFilterFunction","item","_$get","toLowerCase","replace","normalize","key","indexOf","propSearchFunction","labelText","dataSearch","filter","onSelect","index","findIndex","splice","push","_renderDropdown","TouchableWithoutFeedback","onPress","View","dropdown","Text","textItem","Image","source","icon","tintColor","checkSelected","_renderItem","selected","TouchableOpacity","wrapItem","renderSearch","input","inputStyle","autoCorrect","keyboardType","placeholderTextColor","_renderListTop","flexShrink","FlatList","keyboardShouldPersistTaps","inverted","keyExtractor","_item","toString","_renderListBottom","_renderModal","styleVertical","isTopPosition","topHeight","keyboardStyle","Modal","transparent","statusBarTranslucent","supportedOrientations","onRequestClose","flex1","wrapTop","container","unSelect","_renderItemSelected","list","check","rowSelectedItem","map","selectedItem","selectedTextLeftItem","selectedTextItem","_renderInside","mainWrap","onLayout","_renderDropdownInside","dropdownInside"],"sources":["index.tsx"],"sourcesContent":["import React, {\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  Dimensions,\n  FlatList,\n  Image,\n  Keyboard,\n  Modal,\n  Text,\n  TouchableOpacity,\n  TouchableWithoutFeedback,\n  View,\n  ViewStyle,\n  KeyboardEvent,\n  I18nManager,\n} from 'react-native';\nimport CInput from '../TextInput';\nimport { useDeviceOrientation } from '../../useDeviceOrientation';\nimport { useDetectDevice } from '../../toolkits';\nimport { styles } from './styles';\nimport type { MultiSelectProps } from './model';\nimport _ from 'lodash';\n\nconst { isTablet, isIOS } = useDetectDevice;\nconst ic_down = require('../../assets/down.png');\n\nconst defaultProps = {\n  placeholder: 'Select item',\n  activeColor: '#F6F7F8',\n  data: [],\n  style: {},\n};\n\nconst MultiSelectComponent = React.forwardRef<any, MultiSelectProps>(\n  (props, currentRef) => {\n    const orientation = useDeviceOrientation();\n    const {\n      testID,\n      itemTestIDField,\n      onChange,\n      data,\n      value,\n      style,\n      labelField,\n      valueField,\n      selectedStyle,\n      selectedTextStyle,\n      itemContainerStyle,\n      itemTextStyle,\n      iconStyle,\n      activeColor,\n      containerStyle,\n      fontFamily,\n      placeholderStyle,\n      iconColor = 'gray',\n      inputSearchStyle,\n      searchPlaceholder,\n      placeholder,\n      search = false,\n      maxHeight = 340,\n      maxSelect,\n      disable = false,\n      keyboardAvoiding = true,\n      inside = false,\n      renderItem,\n      renderLeftIcon,\n      renderRightIcon,\n      renderSelectedItem,\n      renderInputSearch,\n      onFocus,\n      onBlur,\n      showsVerticalScrollIndicator = true,\n      dropdownPosition = 'auto',\n      flatListProps,\n      alwaysRenderItemSelected = false,\n      searchQuery,\n      statusBarIsTranslucent,\n      backgroundColor,\n      onChangeText,\n    } = props;\n\n    const ref = useRef<View>(null);\n    const [visible, setVisible] = useState<boolean>(false);\n    const [currentValue, setCurrentValue] = useState<any[]>([]);\n    const [listData, setListData] = useState<any[]>(data);\n    const [, setKey] = useState<number>(Math.random());\n    const [position, setPosition] = useState<any>();\n    const [focus, setFocus] = useState<boolean>(false);\n    const [keyboardHeight, setKeyboardHeight] = useState<number>(0);\n    const [searchText, setSearchText] = useState('');\n\n    const { width: W, height: H } = Dimensions.get('window');\n    const styleContainerVertical: ViewStyle = useMemo(() => {\n      return {\n        backgroundColor: 'rgba(0,0,0,0.1)',\n        alignItems: 'center',\n      };\n    }, []);\n    const styleHorizontal: ViewStyle = useMemo(() => {\n      return { marginBottom: 20, width: W / 2, alignSelf: 'center' };\n    }, [W]);\n\n    useImperativeHandle(currentRef, () => {\n      return { open: eventOpen, close: eventClose };\n    });\n\n    useEffect(() => {\n      setListData([...data]);\n      if (searchText) {\n        onSearch(searchText);\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [data, searchText]);\n\n    const eventOpen = () => {\n      if (!disable) {\n        setVisible(true);\n        if (onFocus) {\n          onFocus();\n        }\n      }\n    };\n\n    const eventClose = () => {\n      if (!disable) {\n        setVisible(false);\n        if (onBlur) {\n          onBlur();\n        }\n      }\n    };\n\n    const font = useCallback(() => {\n      if (fontFamily) {\n        return {\n          fontFamily: fontFamily,\n        };\n      } else {\n        return {};\n      }\n    }, [fontFamily]);\n\n    const getValue = useCallback(() => {\n      setCurrentValue(value ? [...value] : []);\n    }, [value]);\n\n    const _measure = useCallback(() => {\n      if (ref && ref?.current) {\n        ref.current.measure((_width, _height, px, py, fx, fy) => {\n          const isFull = orientation === 'LANDSCAPE' && !isTablet;\n          const w = Math.floor(px);\n          const top = isFull ? 20 : Math.floor(py) + Math.floor(fy) + 2;\n          const bottom = H - top;\n          const left = I18nManager.isRTL\n            ? W - Math.floor(px) - Math.floor(fx)\n            : Math.floor(fx);\n\n          setPosition({\n            isFull,\n            w,\n            top,\n            bottom: Math.floor(bottom),\n            left,\n            height: Math.floor(py),\n          });\n        });\n      }\n    }, [H, W, orientation]);\n\n    const onKeyboardDidShow = useCallback(\n      (e: KeyboardEvent) => {\n        _measure();\n        setKeyboardHeight(e.endCoordinates.height);\n      },\n      [_measure]\n    );\n\n    const onKeyboardDidHide = () => {\n      setKeyboardHeight(0);\n    };\n\n    useEffect(() => {\n      const susbcriptionKeyboardDidShow = Keyboard.addListener(\n        'keyboardDidShow',\n        onKeyboardDidShow\n      );\n      const susbcriptionKeyboardDidHide = Keyboard.addListener(\n        'keyboardDidHide',\n        onKeyboardDidHide\n      );\n\n      return () => {\n        if (typeof susbcriptionKeyboardDidShow?.remove === 'function') {\n          susbcriptionKeyboardDidShow.remove();\n        } else {\n          Keyboard.removeListener('keyboardDidShow', onKeyboardDidShow);\n        }\n\n        if (typeof susbcriptionKeyboardDidHide?.remove === 'function') {\n          susbcriptionKeyboardDidHide.remove();\n        } else {\n          Keyboard.removeListener('keyboardDidHide', onKeyboardDidHide);\n        }\n      };\n    }, [onKeyboardDidShow]);\n\n    useEffect(() => {\n      getValue();\n    }, [getValue, value]);\n\n    const showOrClose = useCallback(() => {\n      if (!disable) {\n        _measure();\n        setVisible(!visible);\n        setListData(data);\n\n        if (!visible) {\n          if (onFocus) {\n            onFocus();\n          }\n        } else {\n          if (onBlur) {\n            onBlur();\n          }\n        }\n      }\n    }, [_measure, data, disable, onBlur, onFocus, visible]);\n\n    const onSearch = useCallback(\n      (text: string) => {\n        if (text.length > 0) {\n          const defaultFilterFunction = (e: any) => {\n            const item = _.get(e, labelField)\n              ?.toLowerCase()\n              .replace(' ', '')\n              .normalize('NFD')\n              .replace(/[\\u0300-\\u036f]/g, '');\n            const key = text\n              .toLowerCase()\n              .replace(' ', '')\n              .normalize('NFD')\n              .replace(/[\\u0300-\\u036f]/g, '');\n\n            return item.indexOf(key) >= 0;\n          };\n\n          const propSearchFunction = (e: any) => {\n            const labelText = _.get(e, labelField);\n\n            return searchQuery?.(text, labelText);\n          };\n\n          const dataSearch = data.filter(\n            searchQuery ? propSearchFunction : defaultFilterFunction\n          );\n          setListData(dataSearch);\n        } else {\n          setListData(data);\n        }\n      },\n      [data, labelField, searchQuery]\n    );\n\n    const onSelect = useCallback(\n      (item: any) => {\n        const index = currentValue.findIndex(\n          (e) => e === _.get(item, valueField)\n        );\n        if (index > -1) {\n          currentValue.splice(index, 1);\n        } else {\n          if (maxSelect) {\n            if (currentValue.length < maxSelect) {\n              currentValue.push(_.get(item, valueField));\n            }\n          } else {\n            currentValue.push(_.get(item, valueField));\n          }\n        }\n        onChange(currentValue);\n        setKey(Math.random());\n      },\n      [currentValue, maxSelect, onChange, valueField]\n    );\n\n    const _renderDropdown = () => {\n      return (\n        <TouchableWithoutFeedback testID={testID} onPress={showOrClose}>\n          <View style={styles.dropdown}>\n            {renderLeftIcon?.()}\n            <Text style={[styles.textItem, placeholderStyle, font()]}>\n              {placeholder}\n            </Text>\n            {renderRightIcon ? (\n              renderRightIcon()\n            ) : (\n              <Image\n                source={ic_down}\n                style={[styles.icon, { tintColor: iconColor }, iconStyle]}\n              />\n            )}\n          </View>\n        </TouchableWithoutFeedback>\n      );\n    };\n\n    const checkSelected = useCallback(\n      (item: any) => {\n        const index = currentValue.findIndex(\n          (e) => e === _.get(item, valueField)\n        );\n        return index > -1;\n      },\n      [currentValue, valueField]\n    );\n\n    const _renderItem = useCallback(\n      ({ item, index }: { item: any; index: number }) => {\n        const selected = checkSelected(item);\n        return (\n          <TouchableOpacity\n            testID={_.get(item, itemTestIDField || labelField)}\n            key={index}\n            onPress={() => onSelect(item)}\n            style={[\n              itemContainerStyle,\n              selected && {\n                backgroundColor: activeColor,\n                ...styles.wrapItem,\n              },\n            ]}\n          >\n            {renderItem ? (\n              renderItem(item, selected)\n            ) : (\n              <View style={styles.item}>\n                <Text style={[styles.textItem, itemTextStyle, font()]}>\n                  {_.get(item, labelField)}\n                </Text>\n              </View>\n            )}\n          </TouchableOpacity>\n        );\n      },\n      [\n        activeColor,\n        checkSelected,\n        font,\n        itemContainerStyle,\n        itemTestIDField,\n        itemTextStyle,\n        labelField,\n        onSelect,\n        renderItem,\n      ]\n    );\n\n    const renderSearch = useCallback(() => {\n      if (search) {\n        if (renderInputSearch) {\n          return renderInputSearch((text) => {\n            if (onChangeText) {\n              setSearchText(text);\n              onChangeText(text);\n            }\n            onSearch(text);\n          });\n        } else {\n          return (\n            <CInput\n              testID={testID + ' input'}\n              style={[styles.input, inputSearchStyle]}\n              inputStyle={[inputSearchStyle, font()]}\n              autoCorrect={false}\n              keyboardType={isIOS ? 'default' : 'visible-password'}\n              placeholder={searchPlaceholder}\n              onChangeText={(e) => {\n                if (onChangeText) {\n                  setSearchText(e);\n                  onChangeText(e);\n                }\n                onSearch(e);\n              }}\n              placeholderTextColor=\"gray\"\n              iconStyle={[{ tintColor: iconColor }, iconStyle]}\n              onFocus={() => setFocus(true)}\n              onBlur={() => {\n                setFocus(false);\n              }}\n            />\n          );\n        }\n      }\n      return null;\n    }, [\n      font,\n      iconColor,\n      iconStyle,\n      inputSearchStyle,\n      onChangeText,\n      onSearch,\n      renderInputSearch,\n      search,\n      searchPlaceholder,\n      testID,\n    ]);\n\n    const _renderListTop = useCallback(() => {\n      return (\n        <TouchableWithoutFeedback>\n          <View style={styles.flexShrink}>\n            <FlatList\n              testID={testID + ' flatlist'}\n              {...flatListProps}\n              keyboardShouldPersistTaps=\"handled\"\n              data={listData}\n              inverted\n              renderItem={_renderItem}\n              keyExtractor={(_item, index) => index.toString()}\n              showsVerticalScrollIndicator={showsVerticalScrollIndicator}\n            />\n            {renderSearch()}\n          </View>\n        </TouchableWithoutFeedback>\n      );\n    }, [\n      _renderItem,\n      flatListProps,\n      listData,\n      renderSearch,\n      showsVerticalScrollIndicator,\n      testID,\n    ]);\n\n    const _renderListBottom = useCallback(() => {\n      return (\n        <TouchableWithoutFeedback>\n          <View style={styles.flexShrink}>\n            {renderSearch()}\n            <FlatList\n              testID={testID + ' flatlist'}\n              {...flatListProps}\n              keyboardShouldPersistTaps=\"handled\"\n              data={listData}\n              renderItem={_renderItem}\n              keyExtractor={(_item, index) => index.toString()}\n              showsVerticalScrollIndicator={showsVerticalScrollIndicator}\n            />\n          </View>\n        </TouchableWithoutFeedback>\n      );\n    }, [\n      _renderItem,\n      flatListProps,\n      listData,\n      renderSearch,\n      showsVerticalScrollIndicator,\n      testID,\n    ]);\n\n    const _renderModal = useCallback(() => {\n      if (visible && position) {\n        const { isFull, w, top, bottom, left, height } = position;\n        if (w && top && bottom) {\n          const styleVertical: ViewStyle = { left: left, maxHeight: maxHeight };\n          const isTopPosition =\n            dropdownPosition === 'auto'\n              ? bottom < (isIOS ? 200 : search ? 310 : 300)\n              : dropdownPosition === 'top'\n              ? true\n              : false;\n          let topHeight = isTopPosition ? top - height : top;\n\n          let keyboardStyle: ViewStyle = {};\n          if (keyboardAvoiding) {\n            if (renderInputSearch) {\n              if (keyboardHeight > 0 && bottom < keyboardHeight + height) {\n                if (isTopPosition) {\n                  topHeight = H - keyboardHeight;\n                } else {\n                  keyboardStyle = { backgroundColor: 'rgba(0,0,0,0.1)' };\n                  topHeight = H - keyboardHeight - 55;\n                }\n              }\n            } else {\n              if (\n                focus &&\n                keyboardHeight > 0 &&\n                bottom < keyboardHeight + height\n              ) {\n                if (isTopPosition) {\n                  topHeight = H - keyboardHeight;\n                } else {\n                  keyboardStyle = { backgroundColor: 'rgba(0,0,0,0.1)' };\n                  topHeight = H - keyboardHeight - 55;\n                }\n              }\n            }\n          }\n\n          return (\n            <Modal\n              transparent\n              statusBarTranslucent={statusBarIsTranslucent}\n              visible={visible}\n              supportedOrientations={['landscape', 'portrait']}\n              onRequestClose={showOrClose}\n            >\n              <TouchableWithoutFeedback onPress={showOrClose}>\n                <View\n                  style={[\n                    styles.flex1,\n                    isFull && styleContainerVertical,\n                    backgroundColor && { backgroundColor: backgroundColor },\n                    keyboardStyle,\n                  ]}\n                >\n                  <View\n                    style={[\n                      styles.wrapTop,\n                      {\n                        height: topHeight,\n                        width: w,\n                      },\n                    ]}\n                  >\n                    {isTopPosition && (\n                      <View\n                        style={[\n                          { width: w },\n                          styles.container,\n                          containerStyle,\n                          isFull ? styleHorizontal : styleVertical,\n                        ]}\n                      >\n                        {_renderListTop()}\n                      </View>\n                    )}\n                  </View>\n                  <View style={styles.flex1}>\n                    {!isTopPosition && (\n                      <View\n                        style={[\n                          { width: w },\n                          styles.container,\n                          containerStyle,\n                          isFull ? styleHorizontal : styleVertical,\n                        ]}\n                      >\n                        {_renderListBottom()}\n                      </View>\n                    )}\n                  </View>\n                </View>\n              </TouchableWithoutFeedback>\n            </Modal>\n          );\n        }\n        return null;\n      }\n      return null;\n    }, [\n      visible,\n      position,\n      maxHeight,\n      dropdownPosition,\n      search,\n      keyboardAvoiding,\n      statusBarIsTranslucent,\n      showOrClose,\n      styleContainerVertical,\n      backgroundColor,\n      containerStyle,\n      styleHorizontal,\n      _renderListTop,\n      _renderListBottom,\n      renderInputSearch,\n      keyboardHeight,\n      H,\n      focus,\n    ]);\n\n    const unSelect = (item: any) => {\n      if (!disable) {\n        onSelect(item);\n      }\n    };\n\n    const _renderItemSelected = (inside: boolean) => {\n      const list = data.filter((e: any) => {\n        const check = value?.indexOf(_.get(e, valueField));\n        if (check !== -1) {\n          return e;\n        }\n      });\n\n      return (\n        <View style={[styles.rowSelectedItem, inside && styles.flex1]}>\n          {list.map((e) => {\n            if (renderSelectedItem) {\n              return (\n                <TouchableOpacity\n                  testID={_.get(e, itemTestIDField || labelField)}\n                  key={_.get(e, labelField)}\n                  onPress={() => unSelect(e)}\n                >\n                  {renderSelectedItem(e, () => {\n                    unSelect(e);\n                  })}\n                </TouchableOpacity>\n              );\n            } else {\n              return (\n                <TouchableOpacity\n                  testID={_.get(e, itemTestIDField || labelField)}\n                  key={_.get(e, labelField)}\n                  style={[styles.selectedItem, selectedStyle]}\n                  onPress={() => unSelect(e)}\n                >\n                  <Text\n                    style={[\n                      styles.selectedTextLeftItem,\n                      selectedTextStyle,\n                      font(),\n                    ]}\n                  >\n                    {_.get(e, labelField)}\n                  </Text>\n                  <Text style={[styles.selectedTextItem, selectedTextStyle]}>\n                    ⓧ\n                  </Text>\n                </TouchableOpacity>\n              );\n            }\n          })}\n        </View>\n      );\n    };\n\n    const _renderInside = () => {\n      return (\n        <View style={[styles.mainWrap, style]} ref={ref} onLayout={_measure}>\n          {_renderDropdownInside()}\n          {_renderModal()}\n        </View>\n      );\n    };\n\n    const _renderDropdownInside = () => {\n      return (\n        <TouchableWithoutFeedback testID={testID} onPress={showOrClose}>\n          <View style={styles.dropdownInside}>\n            {renderLeftIcon?.()}\n            {value && value?.length > 0 ? (\n              _renderItemSelected(true)\n            ) : (\n              <Text style={[styles.textItem, placeholderStyle, font()]}>\n                {placeholder}\n              </Text>\n            )}\n            {renderRightIcon ? (\n              renderRightIcon()\n            ) : (\n              <Image\n                source={ic_down}\n                style={[styles.icon, { tintColor: iconColor }, iconStyle]}\n              />\n            )}\n          </View>\n        </TouchableWithoutFeedback>\n      );\n    };\n\n    if (inside) {\n      return _renderInside();\n    }\n\n    return (\n      <>\n        <View style={[styles.mainWrap, style]} ref={ref} onLayout={_measure}>\n          {_renderDropdown()}\n          {_renderModal()}\n        </View>\n        {(!visible || alwaysRenderItemSelected) && _renderItemSelected(false)}\n      </>\n    );\n  }\n);\n\nMultiSelectComponent.defaultProps = defaultProps;\n\nexport default MultiSelectComponent;\n"]},"metadata":{},"sourceType":"module"}