{"ast":null,"code":"import { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport Product from \"./views/Product\";\nimport Login from \"./views/Login\";\nimport Home from \"./views/Home\";\nimport Search from \"./views/Search\";\nimport Setting from \"./views/Setting\";\nimport ProductDetail from \"./views/ProductDetail\";\nimport Cart from \"./views/Cart\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Tab = createBottomTabNavigator();\n\nfunction TabNavigator() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === \"Home\") {\n            iconName = focused ? \"home\" : \"home\";\n          } else if (route.name === \"Search\") {\n            iconName = focused ? \"search\" : \"search\";\n          } else if (route.name === \"Product\") {\n            iconName = focused ? \"paw\" : \"paw\";\n          } else if (route.name === \"Setting\") {\n            iconName = focused ? \"ios-settings\" : \"ios-settings\";\n          }\n\n          return _jsx(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: \"#ffcdd2\",\n        tabBarInactiveTintColor: \"black\",\n        tabBarStyle: {\n          backgroundColor: \"#9575cd\"\n        }\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: Home,\n      screenOptions: {\n        headerShown: false\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Search\",\n      component: Search,\n      screenOptions: {\n        headerShown: false\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Products\",\n      component: StackProduct,\n      screenOptions: {\n        headerShown: false\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Setting\",\n      component: Setting,\n      screenOptions: {\n        headerShown: false\n      }\n    })]\n  });\n}\n\nvar ProductStack = createNativeStackNavigator();\n\nfunction StackProduct() {\n  _jsx(NavigationContainer, {\n    children: _jsxs(ProductStack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: [_jsx(ProductStack.Screen, {\n        name: \"Product\",\n        component: Product\n      }), _jsx(ProductStack.Screen, {\n        name: \"ProductDetail\",\n        component: ProductDetail\n      }), _jsx(ProductStack.Screen, {\n        name: \"Cart\",\n        component: Cart\n      })]\n    })\n  });\n}\n\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"Login\",\n        component: Login,\n        options: {\n          title: \"Login\"\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Tab\",\n        component: TabNavigator,\n        options: {\n          title: \"Tab\"\n        }\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  }\n});","map":{"version":3,"names":["StatusBar","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","createDrawerNavigator","Product","Login","Home","Search","Setting","ProductDetail","Cart","Ionicons","Tab","TabNavigator","route","headerShown","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarStyle","backgroundColor","StackProduct","ProductStack","Stack","App","title","styles","StyleSheet","create","container","flex"],"sources":["D:/PT di động/Project/Shops/App.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, Text, View, TouchableOpacity, Image } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport Product from \"./views/Product\";\nimport Login from \"./views/Login\";\nimport Home from \"./views/Home\";\nimport Search from \"./views/Search\";\nimport Setting from \"./views/Setting\";\nimport ProductDetail from \"./views/ProductDetail\";\nimport Cart from \"./views/Cart\";\n// import Settings from \"./views/Settings\";FontAwesomeIcon from \"react-native-vector-icons/FontAwesome\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\n////***********STACK + TAB */\nconst Tab = createBottomTabNavigator();\nfunction TabNavigator() {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        headerShown: false,\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n          if (route.name === \"Home\") {\n            iconName = focused ? \"home\" : \"home\";\n          } else if (route.name === \"Search\") {\n            iconName = focused ? \"search\" : \"search\";\n          } else if (route.name === \"Product\") {\n            iconName = focused ? \"paw\" : \"paw\";\n          } else if (route.name === \"Setting\") {\n            iconName = focused ? \"ios-settings\" : \"ios-settings\";\n          }\n          return <Ionicons name={iconName} size={size} color={color} />;\n        },\n\n        tabBarActiveTintColor: \"#ffcdd2\",\n        tabBarInactiveTintColor: \"black\",\n        tabBarStyle: { backgroundColor: \"#9575cd\" },\n      })}\n    >\n      <Tab.Screen\n        name=\"Home\"\n        component={Home}\n        screenOptions={{ headerShown: false }}\n      />\n      <Tab.Screen\n        name=\"Search\"\n        component={Search}\n        screenOptions={{ headerShown: false }}\n      />\n      <Tab.Screen\n        name=\"Products\"\n        component={StackProduct}\n        screenOptions={{ headerShown: false }}\n      />\n      <Tab.Screen\n        name=\"Setting\"\n        component={Setting}\n        screenOptions={{ headerShown: false }}\n      />\n    </Tab.Navigator>\n  );\n}\n\nconst ProductStack = createNativeStackNavigator();\nfunction StackProduct() {\n  <NavigationContainer>\n    <ProductStack.Navigator screenOptions={{ headerShown: false }}>\n      <ProductStack.Screen name=\"Product\" component={Product} />\n      <ProductStack.Screen name=\"ProductDetail\" component={ProductDetail} />\n      <ProductStack.Screen name=\"Cart\" component={Cart} />\n    </ProductStack.Navigator>\n  </NavigationContainer>;\n}\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator screenOptions={{ headerShown: false }}>\n        <Stack.Screen\n          name=\"Login\"\n          component={Login}\n          options={{ title: \"Login\" }}\n        />\n        <Stack.Screen\n          name=\"Tab\"\n          component={TabNavigator}\n          options={{ title: \"Tab\" }}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n  },\n});\n\n/////********* ONLY STACK ************\n// const Stack = createNativeStackNavigator();\n\n// export default function App() {\n//   return (\n//     <NavigationContainer>\n//       <Stack.Navigator screenOptions={{ headerShown: false }}>\n//         <Stack.Screen\n//           name=\"Login\"\n//           component={Login}\n//           options={{ title: \"Login\" }}\n//         />\n//         <Stack.Screen\n//           name=\"Product\"\n//           component={Product}\n//           options={{ title: \"Product\" }}\n//         />\n//       </Stack.Navigator>\n//     </NavigationContainer>\n//   );\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: \"#fff\",\n//   },\n// });\n\n///////******** MIX TAB + STACK + DRAWER *************\n// const navOptionHandler = () => ({\n//   headerShown: false,\n// });\n\n// const StackHome = createNativeStackNavigator();\n// function HomeStack() {\n//   return (\n//     <StackHome.Navigator initialRouteName=\"Home\">\n//       <StackHome.Screen\n//         name=\"HomePage\"\n//         component={Home}\n//         options={navOptionHandler}\n//       />\n//       <StackHome.Screen\n//         name=\"HomePageDetail\"\n//         component={HomePageDetail}\n//         options={navOptionHandler}\n//       />\n//     </StackHome.Navigator>\n//   );\n// }\n\n// const StackProduct = createNativeStackNavigator();\n// function ProductStack() {\n//   return (\n//     <StackProduct.Navigator initialRouteName=\"Product\">\n//       <StackProduct.Screen\n//         name=\"ProductPage\"\n//         component={Product}\n//         options={navOptionHandler}\n//       />\n//       <StackProduct.Screen\n//         name=\"ProductPageDetail\"\n//         component={ProductPageDetail}\n//         options={navOptionHandler}\n//       />\n//     </StackProduct.Navigator>\n//   );\n// }\n\n// const Tab = createBottomTabNavigator();\n// function TabNavigator() {\n//   return (\n//     <Tab.Navigator\n//       screenOptions={({ route }) => ({\n//         headerShown: false,\n//         tabBarIcon: ({ focused, color, size }) => {\n//           let iconName;\n//           if (route.name === \"Home\") {\n//             iconName = focused ? \"home\" : \"home\";\n//           } else if (route.name === \"Product\") {\n//             iconName = focused ? \"shopping-bag\" : \"shopping-bag\";\n//           }\n//           return <Icon name={iconName} size={size} color={color} />;\n//         },\n\n//         tabBarActiveTintColor: \"#ffcdd2\",\n//         tabBarInactiveTintColor: \"black\",\n//         tabBarStyle: { backgroundColor: \"#9575cd\" },\n//       })}\n//     >\n//       <Tab.Screen\n//         name=\"Home\"\n//         component={HomeStack}\n//         options={navOptionHandler}\n//       />\n//       <Tab.Screen\n//         name=\"Product\"\n//         component={ProductStack}\n//         options={navOptionHandler}\n//       />\n//     </Tab.Navigator>\n//   );\n// }\n\n// const Drawer = createDrawerNavigator();\n// function DrawerNavigator() {\n//   return (\n//     <DrawerNavigator initialRouteName=\"MenuTab\">\n//       <Drawer.Screen\n//         name=\"MenuTab\"\n//         component={TabNavigator}\n//         options={navOptionHandler}\n//       />\n//       <Drawer.Screen\n//         name=\"Notice\"\n//         component={Notice}\n//         options={navOptionHandler}\n//       />\n//     </DrawerNavigator>\n//   );\n// }\n\n// const StackApp = createNativeStackNavigator();\n// export default function App() {\n//   return (\n//     <NavigationContainer>\n//       <StackApp.Navigator initialRouteName=\"Login\">\n//         <StackApp.Screen\n//           name=\"Login\"\n//           component={Login}\n//           //options={{ title: \"Login\" }}\n//           options={navOptionHandler}\n//         />\n//         <StackApp.Screen\n//           name=\"HomeApp\"\n//           component={DrawerNavigator}\n//           //options={{ title: \"Product\" }}\n//           options={navOptionHandler}\n//         />\n//       </StackApp.Navigator>\n//     </NavigationContainer>\n//   );\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: \"#fff\",\n//   },\n// });\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}