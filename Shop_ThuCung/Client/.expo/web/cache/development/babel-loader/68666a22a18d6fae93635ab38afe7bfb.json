{"ast":null,"code":"import { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport Product from \"./views/Product\";\nimport Login from \"./views/Login\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      screenOptions: {\n        headerShown: false\n      },\n      children: [_jsx(Stack.Screen, {\n        name: \"Login\",\n        component: Login,\n        options: {\n          title: \"Login\"\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Product\",\n        component: Product,\n        options: {\n          title: \"Product\"\n        }\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  }\n});","map":{"version":3,"names":["StatusBar","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","createDrawerNavigator","Product","Login","Icon","Stack","App","headerShown","title","styles","StyleSheet","create","container","flex","backgroundColor"],"sources":["D:/PT di động/Project/Shops/App.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, Text, View, TouchableOpacity, Image } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport Product from \"./views/Product\";\nimport Login from \"./views/Login\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\n//import { Ionicons } from \"@expo/vector-icons\";\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator screenOptions={{ headerShown: false }}>\n        <Stack.Screen\n          name=\"Login\"\n          component={Login}\n          options={{ title: \"Login\" }}\n        />\n        <Stack.Screen\n          name=\"Product\"\n          component={Product}\n          options={{ title: \"Product\" }}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n  },\n});\n\n//////////////////////////////////////////////////////////////////////// MIX TAB + STACK + DRAWER\n// const navOptionHandler = () => ({\n//   headerShown: false,\n// });\n\n// const StackHome = createNativeStackNavigator();\n// function HomeStack() {\n//   return (\n//     <StackHome.Navigator initialRouteName=\"Home\">\n//       <StackHome.Screen\n//         name=\"HomePage\"\n//         component={Home}\n//         options={navOptionHandler}\n//       />\n//       <StackHome.Screen\n//         name=\"HomePageDetail\"\n//         component={HomePageDetail}\n//         options={navOptionHandler}\n//       />\n//     </StackHome.Navigator>\n//   );\n// }\n\n// const StackProduct = createNativeStackNavigator();\n// function ProductStack() {\n//   return (\n//     <StackProduct.Navigator initialRouteName=\"Product\">\n//       <StackProduct.Screen\n//         name=\"ProductPage\"\n//         component={Product}\n//         options={navOptionHandler}\n//       />\n//       <StackProduct.Screen\n//         name=\"ProductPageDetail\"\n//         component={ProductPageDetail}\n//         options={navOptionHandler}\n//       />\n//     </StackProduct.Navigator>\n//   );\n// }\n\n// const Tab = createBottomTabNavigator();\n// function TabNavigator() {\n//   return (\n//     <Tab.Navigator\n//       screenOptions={({ route }) => ({\n//         headerShown: false,\n//         tabBarIcon: ({ focused, color, size }) => {\n//           let iconName;\n//           if (route.name === \"Home\") {\n//             iconName = focused ? \"home\" : \"home\";\n//           } else if (route.name === \"Product\") {\n//             iconName = focused ? \"shopping-bag\" : \"shopping-bag\";\n//           }\n//           return <Icon name={iconName} size={size} color={color} />;\n//         },\n\n//         tabBarActiveTintColor: \"#ffcdd2\",\n//         tabBarInactiveTintColor: \"black\",\n//         tabBarStyle: { backgroundColor: \"#9575cd\" },\n//       })}\n//     >\n//       <Tab.Screen\n//         name=\"Home\"\n//         component={HomeStack}\n//         options={navOptionHandler}\n//       />\n//       <Tab.Screen\n//         name=\"Product\"\n//         component={ProductStack}\n//         options={navOptionHandler}\n//       />\n//     </Tab.Navigator>\n//   );\n// }\n\n// const Drawer = createDrawerNavigator();\n// function DrawerNavigator() {\n//   return (\n//     <DrawerNavigator initialRouteName=\"MenuTab\">\n//       <Drawer.Screen\n//         name=\"MenuTab\"\n//         component={TabNavigator}\n//         options={navOptionHandler}\n//       />\n//       <Drawer.Screen\n//         name=\"Notice\"\n//         component={Notice}\n//         options={navOptionHandler}\n//       />\n//     </DrawerNavigator>\n//   );\n// }\n\n// const StackApp = createNativeStackNavigator();\n// export default function App() {\n//   return (\n//     <NavigationContainer>\n//       <StackApp.Navigator initialRouteName=\"Login\">\n//         <StackApp.Screen\n//           name=\"Login\"\n//           component={Login}\n//           //options={{ title: \"Login\" }}\n//           options={navOptionHandler}\n//         />\n//         <StackApp.Screen\n//           name=\"HomeApp\"\n//           component={DrawerNavigator}\n//           //options={{ title: \"Product\" }}\n//           options={navOptionHandler}\n//         />\n//       </StackApp.Navigator>\n//     </NavigationContainer>\n//   );\n// }\n\n// const styles = StyleSheet.create({\n//   container: {\n//     flex: 1,\n//     backgroundColor: \"#fff\",\n//   },\n// });\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,iBAA1B;;;;;;AAEA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,SAASC,wBAAT,QAAyC,+BAAzC;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,OAAOC,OAAP;AACA,OAAOC,KAAP;AACA,OAAOC,IAAP;;;AAGA,IAAMC,KAAK,GAAGN,0BAA0B,EAAxC;AAEA,eAAe,SAASO,GAAT,GAAe;EAC5B,OACE,KAAC,mBAAD;IAAA,UACE,MAAC,KAAD,CAAO,SAAP;MAAiB,aAAa,EAAE;QAAEC,WAAW,EAAE;MAAf,CAAhC;MAAA,WACE,KAAC,KAAD,CAAO,MAAP;QACE,IAAI,EAAC,OADP;QAEE,SAAS,EAAEJ,KAFb;QAGE,OAAO,EAAE;UAAEK,KAAK,EAAE;QAAT;MAHX,EADF,EAME,KAAC,KAAD,CAAO,MAAP;QACE,IAAI,EAAC,SADP;QAEE,SAAS,EAAEN,OAFb;QAGE,OAAO,EAAE;UAAEM,KAAK,EAAE;QAAT;MAHX,EANF;IAAA;EADF,EADF;AAgBD;AAED,IAAMC,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;EAC/BC,SAAS,EAAE;IACTC,IAAI,EAAE,CADG;IAETC,eAAe,EAAE;EAFR;AADoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}