{"ast":null,"code":"import { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport Product from \"./views/Product\";\nimport Login from \"./views/Login\";\nimport Home from \"./views/Home\";\nimport Notice from \"./views/Notice\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar StackHome = createNativeStackNavigator();\n\nfunction HomeStack() {\n  return _jsxs(StackHome.Navigator, {\n    initialRouteName: \"Home\",\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(StackHome.Screen, {\n      name: \"HomePage\",\n      component: Home\n    }), _jsx(StackHome.Screen, {\n      name: \"HomePageDetail\",\n      component: HomePageDetail\n    })]\n  });\n}\n\nvar StackProduct = createNativeStackNavigator();\n\nfunction ProductStack() {\n  return _jsxs(StackProduct.Navigator, {\n    initialRouteName: \"Product\",\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(StackProduct.Screen, {\n      name: \"ProductPage\",\n      component: Product\n    }), _jsx(StackProduct.Screen, {\n      name: \"ProductPageDetail\",\n      component: ProductPageDetail\n    })]\n  });\n}\n\nvar Tab = createBottomTabNavigator();\n\nfunction TabNavigator() {\n  return _jsxs(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        headerShown: false,\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === \"Home\") {\n            iconName = focused ? \"home\" : \"home\";\n          } else if (route.name === \"Product\") {\n            iconName = focused ? \"shopping-bag\" : \"shopping-bag\";\n          }\n\n          return _jsx(Icon, {\n            name: iconName,\n            size: size,\n            color: color\n          });\n        },\n        tabBarActiveTintColor: \"#ffcdd2\",\n        tabBarInactiveTintColor: \"black\",\n        tabBarStyle: {\n          backgroundColor: \"#9575cd\"\n        }\n      };\n    },\n    children: [_jsx(Tab.Screen, {\n      name: \"Home\",\n      component: HomeStack,\n      screenOptions: {\n        headerShown: false\n      }\n    }), _jsx(Tab.Screen, {\n      name: \"Product\",\n      component: ProductStack,\n      screenOptions: {\n        headerShown: false\n      }\n    })]\n  });\n}\n\nvar Drawer = createDrawerNavigator();\n\nfunction DrawerNavigator() {\n  return _jsxs(DrawerNavigator, {\n    initialRouteName: \"MenuTab\",\n    screenOptions: {\n      headerShown: false\n    },\n    children: [_jsx(Drawer.Screen, {\n      name: \"MenuTab\",\n      component: TabNavigator\n    }), _jsx(Drawer.Screen, {\n      name: \"Notice\",\n      component: Notice\n    })]\n  });\n}\n\nvar StackApp = createNativeStackNavigator();\nexport default function App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(StackApp.Navigator, {\n      initialRouteName: \"Login\",\n      screenOptions: {\n        headerShown: false\n      },\n      children: [_jsx(StackApp.Screen, {\n        name: \"Login\",\n        component: Login\n      }), _jsx(StackApp.Screen, {\n        name: \"HomeApp\",\n        component: DrawerNavigator\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\"\n  }\n});","map":{"version":3,"names":["StatusBar","NavigationContainer","createNativeStackNavigator","createBottomTabNavigator","createDrawerNavigator","Product","Login","Home","Notice","Icon","StackHome","HomeStack","headerShown","HomePageDetail","StackProduct","ProductStack","ProductPageDetail","Tab","TabNavigator","route","tabBarIcon","focused","color","size","iconName","name","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarStyle","backgroundColor","Drawer","DrawerNavigator","StackApp","App","styles","StyleSheet","create","container","flex"],"sources":["D:/PT di động/Project/Shops/App.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, Text, View, TouchableOpacity, Image } from \"react-native\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport Product from \"./views/Product\";\nimport Login from \"./views/Login\";\nimport Home from \"./views/Home\";\nimport Notice from \"./views/Notice\";\nimport Icon from \"react-native-vector-icons/FontAwesome\";\n//import { Ionicons } from \"@expo/vector-icons\";\n\n// const navOptionHandler = () => ({\n//   headerShown: false,\n// });\n\nconst StackHome = createNativeStackNavigator();\nfunction HomeStack() {\n  return (\n    <StackHome.Navigator\n      initialRouteName=\"Home\"\n      screenOptions={{ headerShown: false }}\n    >\n      <StackHome.Screen\n        name=\"HomePage\"\n        component={Home}\n        //options={navOptionHandler}\n      />\n      <StackHome.Screen\n        name=\"HomePageDetail\"\n        component={HomePageDetail}\n        //options={navOptionHandler}\n      />\n    </StackHome.Navigator>\n  );\n}\n\nconst StackProduct = createNativeStackNavigator();\nfunction ProductStack() {\n  return (\n    <StackProduct.Navigator\n      initialRouteName=\"Product\"\n      screenOptions={{ headerShown: false }}\n    >\n      <StackProduct.Screen\n        name=\"ProductPage\"\n        component={Product}\n        //options={navOptionHandler}\n      />\n      <StackProduct.Screen\n        name=\"ProductPageDetail\"\n        component={ProductPageDetail}\n        //options={navOptionHandler}\n      />\n    </StackProduct.Navigator>\n  );\n}\n\nconst Tab = createBottomTabNavigator();\nfunction TabNavigator() {\n  return (\n    <Tab.Navigator\n      screenOptions={({ route }) => ({\n        headerShown: false,\n        tabBarIcon: ({ focused, color, size }) => {\n          let iconName;\n          if (route.name === \"Home\") {\n            iconName = focused ? \"home\" : \"home\";\n          } else if (route.name === \"Product\") {\n            iconName = focused ? \"shopping-bag\" : \"shopping-bag\";\n          }\n          return <Icon name={iconName} size={size} color={color} />;\n        },\n\n        tabBarActiveTintColor: \"#ffcdd2\",\n        tabBarInactiveTintColor: \"black\",\n        tabBarStyle: { backgroundColor: \"#9575cd\" },\n      })}\n    >\n      <Tab.Screen\n        name=\"Home\"\n        component={HomeStack}\n        screenOptions={{ headerShown: false }}\n        //options={navOptionHandler}\n      />\n      <Tab.Screen\n        name=\"Product\"\n        component={ProductStack}\n        screenOptions={{ headerShown: false }}\n        //options={navOptionHandler}\n      />\n    </Tab.Navigator>\n  );\n}\n\nconst Drawer = createDrawerNavigator();\nfunction DrawerNavigator() {\n  return (\n    <DrawerNavigator\n      initialRouteName=\"MenuTab\"\n      screenOptions={{ headerShown: false }}\n    >\n      <Drawer.Screen\n        name=\"MenuTab\"\n        component={TabNavigator}\n        //options={navOptionHandler}\n      />\n      <Drawer.Screen\n        name=\"Notice\"\n        component={Notice}\n        //options={navOptionHandler}\n      />\n    </DrawerNavigator>\n  );\n}\n\nconst StackApp = createNativeStackNavigator();\nexport default function App() {\n  return (\n    <NavigationContainer>\n      <StackApp.Navigator\n        initialRouteName=\"Login\"\n        screenOptions={{ headerShown: false }}\n      >\n        <StackApp.Screen\n          name=\"Login\"\n          component={Login}\n          //options={{ title: \"Login\" }}\n          //options={navOptionHandler}\n        />\n        <StackApp.Screen\n          name=\"HomeApp\"\n          component={DrawerNavigator}\n          //options={{ title: \"Product\" }}\n          //options={navOptionHandler}\n        />\n      </StackApp.Navigator>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}